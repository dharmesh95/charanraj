{"version":3,"sources":["models/GroceryItem.js","components/grocery/grocery.styles.js","components/grocery/input/GroceryButton.js","components/grocery/input/GroceryInput.js","actions/grocery.action.js","components/grocery/list/EmptyGroceryList.js","components/grocery/list/list-item/GroceryListItem.js","components/grocery/list/GroceryList.js","components/grocery/list/GroceryListContainer.js","components/grocery/Grocery.js"],"names":["GroceryItem","user","itemName","date","houseId","this","SendGroceryDiv","styled","div","GroceryHeaderTypography","Typography","GroceryButton","onClick","Button","variant","color","PaperPlaneIcon","GroceryInput","fetchGroceryData","profileObj","useSelector","state","userReducer","useState","groceryItemName","setGroceryItemName","dispatch","useDispatch","Paper","id","label","multiline","rows","placeholder","margin","onChange","$event","target","value","length","groceryItem","Date","url","createUrl","GROCERY_URL","data","headers","getHeaders","callback","axios","post","then","payload","catch","error","console","log","DEFAULT","type","EmptyGroceryList","GroceryListItem","obj","ListItem","alignItems","src","checkIfEmpty","imageUrl","alt","ListItemText","primary","Fragment","name","toLocaleDateString","toLocaleTimeString","GroceryList","React","memo","groceryList","List","dense","map","key","Divider","component","GroceryListContainer","adminReducer","grocery","paragraph","Grocery","lastWeekStartDate","getLastWeekStartDate","props","fetchGrocery","clearInterval","groceryInterval","continuousCall","isAccessible","ACCESS_GROCERY_KEY","PermissionDenied","Component","connect","postData","GET_GROCERY_URL","FETCH_GROCERY"],"mappings":"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","file":"static/js/11.248190f1.chunk.js","sourcesContent":["export default class GroceryItem {\r\n  user;\r\n  itemName;\r\n  date;\r\n\r\n  constructor(user, itemName, date, houseId) {\r\n    this.user = user;\r\n    this.itemName = itemName;\r\n    this.date = date;\r\n  }\r\n}\r\n","import { Typography } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const SendGroceryDiv = styled.div`\r\n  margin: 15px 15px 0px 15px;\r\n  padding-bottom: 15px;\r\n`;\r\n\r\nexport const GroceryHeaderTypography = styled(Typography)`\r\n  margin-top: 15px;\r\n  padding-top: 15px;\r\n  margin-bottom: 15px;\r\n  font-size: 15px;\r\n  padding-left: 15px;\r\n`;","import { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport PaperPlaneIcon from \"../../../icons/PaperPlaneIcon\";\r\n\r\nexport const GroceryButton = ({ onClick }) => {\r\n  return (\r\n    <Button variant=\"contained\" color=\"primary\" onClick={onClick}>\r\n      Send\r\n      <PaperPlaneIcon />\r\n    </Button>\r\n  );\r\n};\r\n","import { Paper } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { postGroceryData } from \"../../../actions/grocery.action\";\r\nimport { createUrl, GROCERY_URL } from \"../../../constants/url.constants\";\r\nimport { getHeaders } from \"../../../constants/user.constants\";\r\nimport GroceryItem from \"../../../models/GroceryItem\";\r\nimport { StyledTextFied } from \"../../common/common.styles\";\r\nimport { SendGroceryDiv } from \"../grocery.styles\";\r\nimport { GroceryButton } from \"./GroceryButton\";\r\n\r\nexport const GroceryInput = ({ fetchGroceryData }) => {\r\n  const profileObj = useSelector((state) => state.userReducer.profileObj);\r\n  const [groceryItemName, setGroceryItemName] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = ($event) => {\r\n    setGroceryItemName($event.target.value);\r\n  };\r\n\r\n  const sendGrocery = () => {\r\n    if (groceryItemName && groceryItemName.length > 2) {\r\n      const groceryItem = new GroceryItem(\r\n        profileObj,\r\n        groceryItemName,\r\n        new Date()\r\n      );\r\n      dispatch(\r\n        postGroceryData(\r\n          createUrl(GROCERY_URL),\r\n          groceryItem,\r\n          getHeaders(profileObj),\r\n          fetchGroceryData\r\n        )\r\n      );\r\n      setGroceryItemName(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Paper>\r\n        <SendGroceryDiv>\r\n          <StyledTextFied\r\n            id=\"standard-multiline-static\"\r\n            label=\"Item Name\"\r\n            multiline\r\n            rows=\"6\"\r\n            placeholder=\"Add something to the Grocery List\"\r\n            margin=\"normal\"\r\n            onChange={handleChange}\r\n            value={groceryItemName}\r\n          />\r\n          <GroceryButton onClick={sendGrocery} />\r\n        </SendGroceryDiv>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\nimport { DEFAULT } from \"../constants/types.constants\";\r\n\r\nexport const postGroceryData = (url, data, headers, callback) => (dispatch) => {\r\n  axios\r\n    .post(url, data, { headers })\r\n    .then((payload) => {\r\n      callback();\r\n    })\r\n    .catch((error) => {\r\n      console.log(DEFAULT, url, error);\r\n      dispatch({ type: DEFAULT, data: {} });\r\n    });\r\n};\r\n","import React from \"react\";\r\nimport { NoDataDiv } from \"../../common/common.styles\";\r\n\r\nexport default function EmptyGroceryList() {\r\n  return <NoDataDiv>No Items in Grocery List</NoDataDiv>;\r\n}\r\n","import { ListItem, ListItemText, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { checkIfEmpty } from \"../../../../helpers/common.helper\";\r\nimport { AvatarImg, RoleTypography, StyledListItemAvatar } from \"../../../common/common.styles\";\r\n\r\nexport default function GroceryListItem({ obj }) {\r\n  const { user, date, itemName } = obj;\r\n  return (\r\n    <ListItem alignItems=\"flex-start\">\r\n      <StyledListItemAvatar>\r\n        <AvatarImg src={checkIfEmpty(user) ? null : user.imageUrl} alt=\"img\" />\r\n      </StyledListItemAvatar>\r\n      <ListItemText\r\n        primary={\r\n          <React.Fragment>\r\n            <Typography>{checkIfEmpty(user) ? null : user.name}</Typography>\r\n            <RoleTypography>\r\n              {new Date(date).toLocaleDateString() +\r\n                \" \" +\r\n                new Date(date).toLocaleTimeString()}\r\n            </RoleTypography>\r\n            <Typography>{itemName}</Typography>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </ListItem>\r\n  );\r\n}\r\n","import { Divider, List } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { checkIfEmpty } from \"../../../helpers/common.helper\";\r\nimport EmptyGroceryList from \"./EmptyGroceryList\";\r\nimport GroceryListItem from \"./list-item/GroceryListItem\";\r\n\r\nexport const GroceryList = React.memo(({ groceryList }) => {\r\n  return (\r\n    <List dense={true}>\r\n      {!checkIfEmpty(groceryList) ? (\r\n        groceryList.map((obj) => (\r\n          <div key={obj.id}>\r\n            <Divider variant=\"fullWidth\" component=\"li\" />\r\n            <GroceryListItem obj={obj} />\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <EmptyGroceryList />\r\n      )}\r\n    </List>\r\n  );\r\n});\r\n","import { Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { GroceryHeaderTypography } from \"../grocery.styles\";\r\nimport { GroceryList } from \"./GroceryList\";\r\n\r\nexport default function GroceryListContainer() {\r\n  const groceryList = useSelector((state) => state.adminReducer.grocery);\r\n  return (\r\n    <Paper>\r\n      <GroceryHeaderTypography paragraph>Grocery List</GroceryHeaderTypography>\r\n      <GroceryList groceryList={groceryList} />\r\n    </Paper>\r\n  );\r\n}\r\n","import { Typography } from \"@material-ui/core\";\r\nimport { Component, default as React } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { postData } from \"../../actions/action\";\r\nimport { continuousCall } from \"../../constants/time.constants\";\r\nimport { FETCH_GROCERY } from \"../../constants/types.constants\";\r\nimport { createUrl, GET_GROCERY_URL } from \"../../constants/url.constants\";\r\nimport { ACCESS_GROCERY_KEY, getHeaders } from \"../../constants/user.constants\";\r\nimport { getLastWeekStartDate } from \"../../helpers/date.helper\";\r\nimport { isAccessible } from \"../../helpers/visibility.helper\";\r\nimport PermissionDenied from \"../common/PermissionDenied\";\r\nimport { GroceryInput } from \"./input/GroceryInput\";\r\nimport GroceryListContainer from \"./list/GroceryListContainer\";\r\n\r\nclass Grocery extends Component {\r\n  lastWeekStartDate = getLastWeekStartDate();\r\n\r\n  fetchGroceryData = () => {\r\n    const { profileObj, fetchGrocery } = this.props;\r\n    fetchGrocery(this.lastWeekStartDate, profileObj);\r\n  };\r\n\r\n  componentDidMount() {\r\n    clearInterval(this.groceryInterval);\r\n    this.groceryInterval = continuousCall(this.fetchGroceryData, this.props);\r\n  }\r\n\r\n  render() {\r\n    const { profileObj } = this.props;\r\n\r\n    return isAccessible(profileObj, ACCESS_GROCERY_KEY) ? (\r\n      <div>\r\n        <Typography paragraph>Grocery</Typography>\r\n        <GroceryInput fetchGroceryData={this.fetchGroceryData} />\r\n        <GroceryListContainer />\r\n      </div>\r\n    ) : (\r\n      <PermissionDenied profileObj={profileObj} />\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.groceryInterval);\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    fetchGrocery: (lastWeekStartDate, profileObj) =>\r\n      dispatch(\r\n        postData(\r\n          createUrl(GET_GROCERY_URL),\r\n          { lastWeekStartDate, houseId: profileObj.houseId },\r\n          getHeaders(profileObj),\r\n          FETCH_GROCERY\r\n        )\r\n      ),\r\n  };\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Grocery);\r\n"],"sourceRoot":""}