{"version":3,"sources":["constants/styles.constants.js","components/admin/cleaning/list/cleaning-list.styles.js","helpers/user.helper.js","icons/CheckIcon.js","icons/TimesIcon.js","components/admin/cleaning/auto-suggest/IntegrationAutosuggest.js","components/admin/cleaning/list/cleaning-list.constants.js","icons/ToolsIcon.js","components/admin/cleaning/date-picker/MaterialUIPickers.js","icons/SaveIcon.js","components/admin/cleaning/list/GeneratedList.js","components/admin/cleaning/list/CleaningList.js","components/admin/cleaning/CleaningAdmin.js","components/admin/feedback/FeedbackList.js","components/admin/feedback/FeedbackAdmin.js","components/admin/requests/Requests.js","components/admin/users/users.styles.js","components/admin/users/UserList.js","components/admin/users/Users.js","components/admin/AdminExpansionPanel.js","components/admin/Admin.js"],"names":["NEXT_CLASS","OLD_CLASS","UPCOMING_CLASS","HeaderTypography","styled","Typography","NotifyButton","Button","ListHeaderTypography","ListBody","List","CleaningAdminBody","div","findUserByName","userList","name","index","length","user","CheckIcon","xmlns","viewBox","d","Component","TimesIcon","renderInputComponent","inputProps","classes","inputRef","ref","other","fullWidth","InputProps","node","input","renderSuggestion","suggestion","query","isHighlighted","matches","match","parts","parse","selected","component","map","part","key","text","style","fontWeight","highlight","getSuggestionValue","useStyles","makeStyles","theme","root","flexGrow","container","position","suggestionsContainerOpen","zIndex","marginTop","spacing","left","right","display","suggestionsList","margin","padding","listStyleType","divider","height","IntegrationAutosuggest","props","label","placeholder","updateUser","userName","suggestions","React","useState","single","popper","state","setState","stateSuggestions","setSuggestions","autosuggestProps","onSuggestionsFetchRequested","value","inputValue","deburr","trim","toLowerCase","inputLength","count","filter","keep","slice","getSuggestions","onSuggestionsClearRequested","className","id","onChange","event","newValue","renderSuggestionsContainer","options","containerProps","square","children","LIST_STYLES","0","1","ToolsIcon","MaterialUIPickers","defaultDate","updateDate","type","Date","selectedDate","setSelectedDate","utils","DateFnsUtils","Grid","justify","width","format","date","KeyboardButtonProps","SaveIcon","compareDateWithToday","today","setHours","compareDates","GeneratedList","header","saveCleaningSchedule","isStyled","reset","profileObj","generatedList","checkIfEmpty","list","obj","val","setStyles","dense","Divider","variant","ListItem","alignItems","toLocaleDateString","primary","Fragment","user1","user2","color","onClick","CleaningList","firstDate","lastDate","start","getDate","end","push","addDaysToDate","houseId","generateList","CleaningAdmin","INITIAL_STATE","userName1","userName2","getFirstDayofTheMonth","getLastDayofTheMonth","addToList","approvedUsers","this","deleteSchedule","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","heading","TrashIcon","size","aria-label","connect","ownProps","dispatch","schedule","postData","createUrl","SAVE_CLEANING_SCHEDULE_URL","getHeaders","getData","DELETE_CLEANING_SCHEDULE_URL","DEFAULT","WithSpinner","feedback","src","imageUrl","alt","ListItemText","toLocaleTimeString","FeedbackAdmin","isLoading","isMaster","Requests","requests","updateUserRequest","request","NORMAL_USER","REJECTED_USER","UserIconButton","IconButton","StyledSpan","span","UserList","updateAccess","updateAdmin","deleteUser","ROLES","role","desc","direction","item","ACCESS_FOOD_KEY","UtensilsIcon","access","food","GREEN_COLOR","GREY_COLOR","ACCESS_GROCERY_KEY","ShoppingBasketIcon","grocery","ACCESS_CLEANING_KEY","BroomIcon","cleaning","ACCESS_SCHEDULE_KEY","CalendarIcon","isAdmin","disabled","button","ADMIN_USER","isSuperAdmin","Users","userListProps","fontSize","typography","pxToRem","fontWeightRegular","flexWrap","textField","marginLeft","marginRight","menu","rightIcon","marginBottom","AdminExpansionPanel","Admin","userObj","updateUserRole","fetchAllAdminData","fetchRequests","fetchApprovedUsers","fetchFeedback","adminInterval","continuousCall","prevProps","paragraph","clearInterval","adminReducer","GET_ALL_REQUESTS_URL","FETCH_ALL_REQUESTS","GET_FEEDBACK_URL","FETCH_FEEDBACK","UPDATE_USER_ROLE_URL","UPDATE_USER_URL","GET_APPROVED_USERS_URL","FETCH_APPROVED_USERS","DELETE_USER_URL"],"mappings":"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","file":"static/js/6.a9dd16a5.chunk.js","sourcesContent":["export const NEXT_CLASS = \"next\";\r\nexport const OLD_CLASS = \"old\";\r\nexport const UPCOMING_CLASS = \"upcoming\";\r\n","import { Button, List, Typography } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const HeaderTypography = styled(Typography)`\r\n  font-size: 16px;\r\n  margin-top: 14px;\r\n  padding-top: 10px;\r\n  padding-left: 10px;\r\n`;\r\n\r\nexport const NotifyButton = styled(Button)`\r\n  margin-left: 16px !important;\r\n  margin-bottom: 16px !important;\r\n`;\r\n\r\nexport const ListHeaderTypography = styled(Typography)`\r\n  font-size: 16px !important;\r\n  margin-top: 14px !important;\r\n`;\r\n\r\nexport const ListBody = styled(List)`\r\n  margin: -8px -16px !important;\r\n`;\r\n\r\nexport const CleaningAdminBody = styled.div`\r\n  padding: 8px 16px;\r\n`;\r\n","export const findUserByName = (userList, name) => {\r\n  for (let index = 0; index < userList.length; index++) {\r\n    const user = userList[index];\r\n    if (user.name === name) return user;\r\n  }\r\n  return { name };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { CheckIconSvg } from \"./icons.styles\";\r\n\r\nexport default class CheckIcon extends Component {\r\n  render() {\r\n    return (\r\n      <CheckIconSvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n        <path d=\"M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z\" />\r\n      </CheckIconSvg>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class TimesIcon extends Component {\r\n  render() {\r\n    return (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n        <path d=\"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\" />\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n","import MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport match from \"autosuggest-highlight/match\";\r\nimport parse from \"autosuggest-highlight/parse\";\r\nimport deburr from \"lodash/deburr\";\r\nimport React from \"react\";\r\nimport Autosuggest from \"react-autosuggest\";\r\n\r\nfunction renderInputComponent(inputProps) {\r\n  const { classes, inputRef = () => {}, ref, ...other } = inputProps;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputRef: node => {\r\n          ref(node);\r\n          inputRef(node);\r\n        },\r\n        classes: {\r\n          input: classes.input\r\n        }\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\r\n  const matches = match(suggestion.name, query);\r\n  const parts = parse(suggestion.name, matches);\r\n\r\n  return (\r\n    <MenuItem selected={isHighlighted} component=\"div\">\r\n      <div>\r\n        {parts.map(part => (\r\n          <span\r\n            key={part.text}\r\n            style={{ fontWeight: part.highlight ? 500 : 400 }}\r\n          >\r\n            {part.text}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nfunction getSuggestions(suggestions, value) {\r\n  const inputValue = deburr(value.trim()).toLowerCase();\r\n  const inputLength = inputValue.length;\r\n  let count = 0;\r\n\r\n  return inputLength === 0\r\n    ? []\r\n    : suggestions.filter(suggestion => {\r\n        const keep =\r\n          count < 5 &&\r\n          suggestion.name.slice(0, inputLength).toLowerCase() === inputValue;\r\n\r\n        if (keep) {\r\n          count += 1;\r\n        }\r\n\r\n        return keep;\r\n      });\r\n}\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n  return suggestion.name;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  container: {\r\n    position: \"relative\"\r\n  },\r\n  suggestionsContainerOpen: {\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0\r\n  },\r\n  suggestion: {\r\n    display: \"block\"\r\n  },\r\n  suggestionsList: {\r\n    margin: 0,\r\n    padding: 0,\r\n    listStyleType: \"none\"\r\n  },\r\n  divider: {\r\n    height: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nexport default function IntegrationAutosuggest(props) {\r\n  const { label, placeholder, updateUser, userName } = props;\r\n  let { suggestions } = props;\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    single: \"\",\r\n    popper: \"\"\r\n  });\r\n\r\n  const [stateSuggestions, setSuggestions] = React.useState([]);\r\n\r\n  const handleSuggestionsFetchRequested = ({ value }) => {\r\n    setSuggestions(getSuggestions(suggestions, value));\r\n  };\r\n\r\n  const handleSuggestionsClearRequested = () => {\r\n    setSuggestions([]);\r\n  };\r\n\r\n  const handleChange = name => (event, { newValue }) => {\r\n    setState({\r\n      ...state,\r\n      [name]: newValue\r\n    });\r\n    updateUser(userName, newValue);\r\n  };\r\n\r\n  const autosuggestProps = {\r\n    renderInputComponent,\r\n    suggestions: stateSuggestions,\r\n    onSuggestionsFetchRequested: handleSuggestionsFetchRequested,\r\n    onSuggestionsClearRequested: handleSuggestionsClearRequested,\r\n    getSuggestionValue,\r\n    renderSuggestion\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.divider} />\r\n      <Autosuggest\r\n        {...autosuggestProps}\r\n        inputProps={{\r\n          classes,\r\n          id: \"react-autosuggest-simple\",\r\n          label: label,\r\n          placeholder: placeholder,\r\n          value: state.single,\r\n          onChange: handleChange(\"single\")\r\n        }}\r\n        theme={{\r\n          container: classes.container,\r\n          suggestionsContainerOpen: classes.suggestionsContainerOpen,\r\n          suggestionsList: classes.suggestionsList,\r\n          suggestion: classes.suggestion\r\n        }}\r\n        renderSuggestionsContainer={options => (\r\n          <Paper {...options.containerProps} square>\r\n            {options.children}\r\n          </Paper>\r\n        )}\r\n      />\r\n      <div className={classes.divider} />\r\n    </div>\r\n  );\r\n}\r\n","import { NEXT_CLASS, OLD_CLASS } from \"../../../../constants/styles.constants\";\r\n\r\nexport const LIST_STYLES = {\r\n  0: NEXT_CLASS,\r\n  1: NEXT_CLASS,\r\n  \"-1\": OLD_CLASS\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { ToolsIconSvg } from \"./icons.styles\";\r\n\r\nexport default class ToolsIcon extends Component {\r\n  render() {\r\n    return (\r\n      <ToolsIconSvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n        <path d=\"M501.1 395.7L384 278.6c-23.1-23.1-57.6-27.6-85.4-13.9L192 158.1V96L64 0 0 64l96 128h62.1l106.6 106.6c-13.6 27.8-9.2 62.3 13.9 85.4l117.1 117.1c14.6 14.6 38.2 14.6 52.7 0l52.7-52.7c14.5-14.6 14.5-38.2 0-52.7zM331.7 225c28.3 0 54.9 11 74.9 31l19.4 19.4c15.8-6.9 30.8-16.5 43.8-29.5 37.1-37.1 49.7-89.3 37.9-136.7-2.2-9-13.5-12.1-20.1-5.5l-74.4 74.4-67.9-11.3L334 98.9l74.4-74.4c6.6-6.6 3.4-17.9-5.7-20.2-47.4-11.7-99.6.9-136.6 37.9-28.5 28.5-41.9 66.1-41.2 103.6l82.1 82.1c8.1-1.9 16.5-2.9 24.7-2.9zm-103.9 82l-56.7-56.7L18.7 402.8c-25 25-25 65.5 0 90.5s65.5 25 90.5 0l123.6-123.6c-7.6-19.9-9.9-41.6-5-62.7zM64 472c-13.2 0-24-10.8-24-24 0-13.3 10.7-24 24-24s24 10.7 24 24c0 13.2-10.7 24-24 24z\" />\r\n      </ToolsIconSvg>\r\n    );\r\n  }\r\n}\r\n","import DateFnsUtils from \"@date-io/date-fns\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider\r\n} from \"@material-ui/pickers\";\r\nimport \"date-fns\";\r\nimport React from \"react\";\r\n\r\nexport default function MaterialUIPickers(props) {\r\n  const { defaultDate, label, updateDate, type } = props;\r\n  // The first commit of Material-UI\r\n  const [selectedDate, setSelectedDate] = React.useState(\r\n    defaultDate || new Date()\r\n  );\r\n\r\n  function handleDateChange(date) {\r\n    setSelectedDate(date);\r\n    updateDate(type, date);\r\n  }\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <Grid container justify=\"space-around\">\r\n        <KeyboardDatePicker\r\n          style={{ width: \"100%\", marginTop: \"0px\" }}\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          label={label}\r\n          format=\"MM/dd/yyyy\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            \"aria-label\": \"change date\"\r\n          }}\r\n        />\r\n      </Grid>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { SaveIconSvg } from \"./icons.styles\";\r\n\r\nexport default class SaveIcon extends Component {\r\n  render() {\r\n    return (\r\n      <SaveIconSvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\r\n        <path d=\"M433.941 129.941l-83.882-83.882A48 48 0 0 0 316.118 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V163.882a48 48 0 0 0-14.059-33.941zM224 416c-35.346 0-64-28.654-64-64 0-35.346 28.654-64 64-64s64 28.654 64 64c0 35.346-28.654 64-64 64zm96-304.52V212c0 6.627-5.373 12-12 12H76c-6.627 0-12-5.373-12-12V108c0-6.627 5.373-12 12-12h228.52c3.183 0 6.235 1.264 8.485 3.515l3.48 3.48A11.996 11.996 0 0 1 320 111.48z\" />\r\n      </SaveIconSvg>\r\n    );\r\n  }\r\n}\r\n","import { Button, Divider, List, ListItem, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { UPCOMING_CLASS } from \"../../../../constants/styles.constants\";\r\nimport { checkIfEmpty } from \"../../../../helpers/common.helper\";\r\nimport { compareDates } from \"../../../../helpers/date.helper\";\r\nimport SaveIcon from \"../../../../icons/SaveIcon\";\r\nimport { StyledListItemAvatar, StyledListItemText } from \"../../../common/common.styles\";\r\nimport { LIST_STYLES } from \"./cleaning-list.constants\";\r\nimport { HeaderTypography } from \"./cleaning-list.styles\";\r\n\r\n\r\n/* accepts date and comapres with current date to return 1, -1 or 0 */\r\nconst compareDateWithToday = date => {\r\n  let today = new Date();\r\n  today.setHours(0, 0, 0, 0);\r\n  return compareDates(date, today);\r\n};\r\n\r\n/* sets styles of all objects in the list based on date */\r\nconst setStyles = list => {\r\n  for (let index = 0; index < list.length; index++) {\r\n    const obj = list[index];\r\n    const val = compareDateWithToday(obj.date);\r\n    obj.className = LIST_STYLES[val];\r\n    if (val !== -1) {\r\n      for (index++; index < list.length; index++) {\r\n        const obj = list[index];\r\n        obj.component = UPCOMING_CLASS;\r\n      }\r\n      return;\r\n    }\r\n  }\r\n};\r\n\r\nexport default function GeneratedList(props) {\r\n  const { header, saveCleaningSchedule, isStyled, reset, profileObj } = props;\r\n  let { generatedList } = props;\r\n  if (!checkIfEmpty(generatedList) && isStyled) setStyles(generatedList);\r\n  return (\r\n    !checkIfEmpty(generatedList) && (\r\n      <div>\r\n        {header && <HeaderTypography>{header}</HeaderTypography>}\r\n        <List dense={true}>\r\n          {generatedList.map((obj, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <Divider variant=\"fullWidth\" component=\"li\" />\r\n                <ListItem className={obj.className} alignItems=\"flex-start\">\r\n                  <StyledListItemAvatar>\r\n                    <span>{new Date(obj.date).toLocaleDateString()}</span>\r\n                  </StyledListItemAvatar>\r\n                  <StyledListItemText\r\n                    primary={\r\n                      <React.Fragment>\r\n                        <Typography>{obj.user1.name}</Typography>\r\n                        <Typography>{obj.user2.name}</Typography>\r\n                      </React.Fragment>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n              </div>\r\n            );\r\n          })}\r\n        </List>\r\n        {saveCleaningSchedule && (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              saveCleaningSchedule(generatedList, profileObj);\r\n              reset();\r\n            }}\r\n          >\r\n            Save\r\n            <SaveIcon  />\r\n          </Button>\r\n        )}\r\n        {props.children}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","import { Button, Divider, ListItem, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { checkIfEmpty } from \"../../../../helpers/common.helper\";\r\nimport { addDaysToDate } from \"../../../../helpers/date.helper\";\r\nimport ToolsIcon from \"../../../../icons/ToolsIcon\";\r\nimport { StyledListItemAvatar, StyledListItemText } from \"../../../common/common.styles\";\r\nimport MaterialUIPickers from \"../date-picker/MaterialUIPickers\";\r\nimport { ListBody, ListHeaderTypography } from \"./cleaning-list.styles\";\r\nimport GeneratedList from \"./GeneratedList\";\r\n\r\nlet generatedList = [];\r\n\r\nconst generateList = (list, firstDate, lastDate, profileObj) => {\r\n  generatedList = [];\r\n  if (lastDate >= firstDate) {\r\n    let start = firstDate.getDate();\r\n    let end = lastDate.getDate();\r\n    for (let index = 0; index < end - start + 1; index++) {\r\n      generatedList.push({\r\n        date: addDaysToDate(firstDate, index),\r\n        user1: list[index % list.length].user1,\r\n        user2: list[index % list.length].user2,\r\n        houseId: profileObj.houseId\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport default function CleaningList(props) {\r\n  const { list, firstDate, lastDate, updateDate, profileObj } = props;\r\n  return (\r\n    !checkIfEmpty(list) && (\r\n      <div>\r\n        <ListHeaderTypography>List</ListHeaderTypography>\r\n        <ListBody dense={true}>\r\n          {list.map((obj, index) => (\r\n            <div key={index}>\r\n              <Divider variant=\"fullWidth\" component=\"li\" />\r\n              <ListItem alignItems=\"flex-start\">\r\n                <StyledListItemAvatar>\r\n                  <span>Day {index + 1}</span>\r\n                </StyledListItemAvatar>\r\n                <StyledListItemText\r\n                  primary={\r\n                    <React.Fragment>\r\n                      <Typography>{obj.user1.name}</Typography>\r\n                      <Typography>{obj.user2.name}</Typography>\r\n                    </React.Fragment>\r\n                  }\r\n                />\r\n              </ListItem>\r\n            </div>\r\n          ))}\r\n        </ListBody>\r\n        <MaterialUIPickers\r\n          updateDate={updateDate}\r\n          label=\"From Date\"\r\n          defaultDate={firstDate}\r\n          type=\"firstDate\"\r\n        />\r\n        <MaterialUIPickers\r\n          type=\"lastDate\"\r\n          label=\"To Date\"\r\n          updateDate={updateDate}\r\n          defaultDate={lastDate}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => generateList(list, firstDate, lastDate, profileObj)}\r\n        >\r\n          Generate\r\n          <ToolsIcon />\r\n        </Button>\r\n        <GeneratedList\r\n          header=\"Generated List\"\r\n          generatedList={generatedList}\r\n          {...props}\r\n        />\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","import { Button, ExpansionPanel, ExpansionPanelSummary, Typography } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getData, postData } from \"../../../actions/action\";\r\nimport { DEFAULT } from \"../../../constants/types.constants\";\r\nimport { createUrl, DELETE_CLEANING_SCHEDULE_URL, SAVE_CLEANING_SCHEDULE_URL } from \"../../../constants/url.constants\";\r\nimport { getHeaders } from \"../../../constants/user.constants\";\r\nimport { getFirstDayofTheMonth, getLastDayofTheMonth } from \"../../../helpers/date.helper\";\r\nimport { findUserByName } from \"../../../helpers/user.helper\";\r\nimport { AddIconFab } from \"../../../icons/icons.styles\";\r\nimport TrashIcon from \"../../../icons/TrashIcon\";\r\nimport IntegrationAutosuggest from \"./auto-suggest/IntegrationAutosuggest\";\r\nimport { CleaningAdminBody } from \"./list/cleaning-list.styles\";\r\nimport CleaningList from \"./list/CleaningList\";\r\n\r\nclass CleaningAdmin extends Component {\r\n  INITIAL_STATE = {\r\n    list: [],\r\n    userName1: \"\",\r\n    userName2: \"\",\r\n    firstDate: getFirstDayofTheMonth(),\r\n    lastDate: getLastDayofTheMonth()\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.INITIAL_STATE;\r\n  }\r\n\r\n  reset = () => {\r\n    this.setState(this.INITIAL_STATE);\r\n  };\r\n\r\n  addToList = () => {\r\n    const { userName1, userName2 } = this.state;\r\n    let { list } = this.state;\r\n    const { approvedUsers } = this.props;\r\n    if (userName1) {\r\n      const user1 = findUserByName(approvedUsers, userName1);\r\n      const user2 = findUserByName(approvedUsers, userName2);\r\n      list.push({ user1, user2 });\r\n      this.setState({ ...this.state, list });\r\n    }\r\n  };\r\n\r\n  updateUser = (userName, value) => {\r\n    this.setState({ ...this.state, [userName]: value });\r\n  };\r\n\r\n  updateDate = (date, value) => {\r\n    this.setState({ ...this.state, [date]: value });\r\n  };\r\n\r\n  render() {\r\n    const { list, userName1, userName2, firstDate, lastDate } = this.state;\r\n    const { approvedUsers, classes, deleteSchedule, profileObj } = this.props;\r\n    return (\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography className={classes.heading}>Cleaning</Typography>\r\n        </ExpansionPanelSummary>\r\n        <CleaningAdminBody>\r\n          <Button\r\n            onClick={() => deleteSchedule(profileObj)}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Delete\r\n            <TrashIcon />\r\n          </Button>\r\n          <IntegrationAutosuggest\r\n            suggestions={approvedUsers}\r\n            label=\"User 1\"\r\n            placeholder=\"Search a User\"\r\n            updateUser={this.updateUser}\r\n            userName=\"userName1\"\r\n          />\r\n          <IntegrationAutosuggest\r\n            suggestions={approvedUsers}\r\n            label=\"User 2\"\r\n            placeholder=\"Search a User\"\r\n            updateUser={this.updateUser}\r\n            userName=\"userName2\"\r\n          />\r\n          <AddIconFab\r\n            className=\"add-icon\"\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            aria-label=\"add\"\r\n          >\r\n            <AddIcon onClick={() => this.addToList()} />\r\n          </AddIconFab>\r\n          <CleaningList\r\n            reset={this.reset}\r\n            list={list}\r\n            firstDate={firstDate}\r\n            lastDate={lastDate}\r\n            updateDate={this.updateDate}\r\n            userName1={userName1}\r\n            userName2={userName2}\r\n            {...this.props}\r\n          />\r\n        </CleaningAdminBody>\r\n      </ExpansionPanel>\r\n    );\r\n  }\r\n}\r\n\r\nCleaningAdmin.propTypes = {};\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  return {};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    saveCleaningSchedule: (schedule, profileObj) =>\r\n      dispatch(\r\n        postData(\r\n          createUrl(SAVE_CLEANING_SCHEDULE_URL),\r\n          schedule,\r\n          getHeaders(profileObj)\r\n        )\r\n      ),\r\n    deleteSchedule: profileObj =>\r\n      dispatch(\r\n        getData(\r\n          createUrl(DELETE_CLEANING_SCHEDULE_URL),\r\n          null,\r\n          getHeaders(profileObj),\r\n          DEFAULT\r\n        )\r\n      )\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CleaningAdmin);\r\n","import { Divider, List, ListItem, ListItemText, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { checkIfEmpty } from \"../../../helpers/common.helper\";\r\nimport { AvatarImg, StyledListItemAvatar } from \"../../common/common.styles\";\r\nimport { WithSpinner } from \"../../common/WithSpinner\";\r\n\r\nfunction FeedbackList({ feedback }) {\r\n  return (\r\n    <div>\r\n      <List dense={true}>\r\n        {feedback.map(obj => (\r\n          <div key={obj.id}>\r\n            <Divider variant=\"fullWidth\" component=\"li\" />\r\n            <ListItem alignItems=\"flex-start\">\r\n              <StyledListItemAvatar>\r\n                <AvatarImg\r\n                  src={checkIfEmpty(obj.user) ? null : obj.user.imageUrl}\r\n                  alt=\"img\"\r\n                />\r\n              </StyledListItemAvatar>\r\n              <ListItemText\r\n                primary={\r\n                  <React.Fragment>\r\n                    <Typography>\r\n                      {checkIfEmpty(obj.user) ? null : obj.user.name}\r\n                    </Typography>\r\n                    <Typography className=\"role\">\r\n                      {new Date(obj.date).toLocaleDateString() +\r\n                        \" \" +\r\n                        new Date(obj.date).toLocaleTimeString()}\r\n                    </Typography>\r\n                    <Typography>{obj.feedback}</Typography>\r\n                  </React.Fragment>\r\n                }\r\n              />\r\n            </ListItem>\r\n          </div>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WithSpinner(FeedbackList);\r\n","import ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport React, { Component } from \"react\";\r\nimport { checkIfEmpty } from \"../../../helpers/common.helper\";\r\nimport { isMaster } from \"../../../helpers/visibility.helper\";\r\nimport FeedbackList from \"./FeedbackList\";\r\n\r\nexport default class FeedbackAdmin extends Component {\r\n  render() {\r\n    const { classes, feedback, profileObj } = this.props;\r\n    return (\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography className={classes.heading}>Feedback</Typography>\r\n        </ExpansionPanelSummary>\r\n        <FeedbackList\r\n          isLoading={checkIfEmpty(feedback) || !isMaster(profileObj)}\r\n          feedback={feedback}\r\n        />\r\n      </ExpansionPanel>\r\n    );\r\n  }\r\n}\r\n","import { Divider, ListItem } from \"@material-ui/core\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport React, { Component } from \"react\";\r\nimport { NORMAL_USER, REJECTED_USER } from \"../../../constants/user.constants\";\r\nimport { checkIfEmpty } from \"../../../helpers/common.helper\";\r\nimport CheckIcon from \"../../../icons/CheckIcon\";\r\nimport { RequestIconButton } from \"../../../icons/icons.styles\";\r\nimport TimesIcon from \"../../../icons/TimesIcon\";\r\nimport { AvatarImg, NoDataDiv, StyledListItemAvatar } from \"../../common/common.styles\";\r\n\r\nexport default class Requests extends Component {\r\n  render() {\r\n    const { classes, requests, updateUserRequest } = this.props;\r\n    return (\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography className={classes.heading}>Requests</Typography>\r\n        </ExpansionPanelSummary>\r\n        {!checkIfEmpty(requests) ? (\r\n          <div>\r\n            <List dense={true}>\r\n              {requests.map((request, index) => (\r\n                <div key={request.id}>\r\n                  <Divider variant=\"fullWidth\" component=\"li\" />\r\n                  <ListItem alignItems=\"flex-start\">\r\n                    <StyledListItemAvatar>\r\n                      <AvatarImg src={request.imageUrl} alt=\"img\" />\r\n                    </StyledListItemAvatar>\r\n                    <ListItemText\r\n                      primary={\r\n                        <React.Fragment>\r\n                          <Typography>{request.name}</Typography>\r\n                          <RequestIconButton\r\n                            onClick={() =>\r\n                              updateUserRequest(request, NORMAL_USER, index)\r\n                            }\r\n                          >\r\n                            <CheckIcon />\r\n                          </RequestIconButton>\r\n                          <RequestIconButton\r\n                            onClick={() =>\r\n                              updateUserRequest(request, REJECTED_USER, index)\r\n                            }\r\n                          >\r\n                            <TimesIcon className=\"times-logo\" />\r\n                          </RequestIconButton>\r\n                        </React.Fragment>\r\n                      }\r\n                    />\r\n                  </ListItem>\r\n                </div>\r\n              ))}\r\n            </List>\r\n          </div>\r\n        ) : (\r\n          <NoDataDiv>No new requests</NoDataDiv>\r\n        )}\r\n      </ExpansionPanel>\r\n    );\r\n  }\r\n}\r\n","import { IconButton } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const UserIconButton = styled(IconButton)`\r\n  padding: 5px !important;\r\n`;\r\n\r\nexport const StyledSpan = styled.span`\r\n  font-size: 11px;\r\n`;\r\n","import { Button, Divider, Grid, List, ListItem, ListItemText, Typography } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport { GREEN_COLOR, GREY_COLOR } from \"../../../constants/color.constants\";\r\nimport { ACCESS_CLEANING_KEY, ACCESS_FOOD_KEY, ACCESS_GROCERY_KEY, ACCESS_SCHEDULE_KEY, ADMIN_USER, NORMAL_USER, ROLES } from \"../../../constants/user.constants\";\r\nimport { isAdmin, isSuperAdmin } from \"../../../helpers/visibility.helper\";\r\nimport BroomIcon from \"../../../icons/BroomIcon\";\r\nimport CalendarIcon from \"../../../icons/CalendarIcon\";\r\nimport ShoppingBasketIcon from \"../../../icons/ShoppingBasketIcon\";\r\nimport UtensilsIcon from \"../../../icons/UtensilsIcon\";\r\nimport { AvatarImg, RoleTypography, StyledListItemAvatar } from \"../../common/common.styles\";\r\nimport { WithSpinner } from \"../../common/WithSpinner\";\r\nimport { StyledSpan, UserIconButton } from \"./users.styles\";\r\n\r\nclass UserList extends Component {\r\n  render() {\r\n    const {\r\n      approvedUsers,\r\n      updateAccess,\r\n      profileObj,\r\n      updateAdmin,\r\n      deleteUser,\r\n      classes\r\n    } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <List dense={true}>\r\n          {approvedUsers.map((user, index) => (\r\n            <div key={user.id}>\r\n              <Divider variant=\"fullWidth\" component=\"li\" />\r\n              <ListItem alignItems=\"flex-start\">\r\n                <StyledListItemAvatar>\r\n                  <AvatarImg src={user.imageUrl} alt=\"img\" />\r\n                </StyledListItemAvatar>\r\n                <ListItemText\r\n                  primary={\r\n                    <React.Fragment>\r\n                      <Typography>{user.name}</Typography>\r\n                      <RoleTypography>{ROLES[user.role].desc}</RoleTypography>\r\n                      <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"flex-start\"\r\n                        alignItems=\"center\"\r\n                      >\r\n                        <Grid item>\r\n                          <UserIconButton\r\n                            onClick={() =>\r\n                              updateAccess(user, ACCESS_FOOD_KEY, index)\r\n                            }\r\n                          >\r\n                            <UtensilsIcon\r\n                              className=\"icons\"\r\n                              color={\r\n                                user.access\r\n                                  ? user.access.food\r\n                                    ? GREEN_COLOR\r\n                                    : GREY_COLOR\r\n                                  : GREY_COLOR\r\n                              }\r\n                            />\r\n                          </UserIconButton>\r\n                          <UserIconButton\r\n                            onClick={() =>\r\n                              updateAccess(user, ACCESS_GROCERY_KEY, index)\r\n                            }\r\n                          >\r\n                            <ShoppingBasketIcon\r\n                              className=\"icons\"\r\n                              color={\r\n                                user.access\r\n                                  ? user.access.grocery\r\n                                    ? GREEN_COLOR\r\n                                    : GREY_COLOR\r\n                                  : GREY_COLOR\r\n                              }\r\n                            />\r\n                          </UserIconButton>\r\n                          <UserIconButton\r\n                            onClick={() =>\r\n                              updateAccess(user, ACCESS_CLEANING_KEY, index)\r\n                            }\r\n                          >\r\n                            <BroomIcon\r\n                              className=\"icons\"\r\n                              color={\r\n                                user.access\r\n                                  ? user.access.cleaning\r\n                                    ? GREEN_COLOR\r\n                                    : GREY_COLOR\r\n                                  : GREY_COLOR\r\n                              }\r\n                            />\r\n                          </UserIconButton>\r\n                          <UserIconButton\r\n                            onClick={() =>\r\n                              updateAccess(user, ACCESS_SCHEDULE_KEY, index)\r\n                            }\r\n                          >\r\n                            <CalendarIcon\r\n                              className=\"icons\"\r\n                              color={\r\n                                user.access\r\n                                  ? user.access.schedule\r\n                                    ? GREEN_COLOR\r\n                                    : GREY_COLOR\r\n                                  : GREY_COLOR\r\n                              }\r\n                            />\r\n                          </UserIconButton>\r\n                          <br />\r\n                          {isAdmin(profileObj) ? (\r\n                            <div>\r\n                              <Button\r\n                                size=\"small\"\r\n                                variant=\"contained\"\r\n                                disabled={isAdmin(user)}\r\n                                className={classes.button}\r\n                                onClick={() =>\r\n                                  updateAdmin(user, ADMIN_USER, index)\r\n                                }\r\n                              >\r\n                                <StyledSpan>Make Admin</StyledSpan>\r\n                              </Button>\r\n                              <Button\r\n                                size=\"small\"\r\n                                variant=\"contained\"\r\n                                disabled={!isAdmin(user) || isSuperAdmin(user)}\r\n                                className={classes.button}\r\n                                onClick={() =>\r\n                                  updateAdmin(user, NORMAL_USER, index)\r\n                                }\r\n                              >\r\n                                <StyledSpan>Remove Admin</StyledSpan>\r\n                              </Button>\r\n                            </div>\r\n                          ) : (\r\n                            <br />\r\n                          )}\r\n                          <Button\r\n                            size=\"small\"\r\n                            variant=\"contained\"\r\n                            disabled={isAdmin(user)}\r\n                            className={classes.button}\r\n                            onClick={() => deleteUser(user, index)}\r\n                          >\r\n                            <StyledSpan>Delete User</StyledSpan>\r\n                          </Button>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </React.Fragment>\r\n                  }\r\n                />\r\n              </ListItem>\r\n            </div>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WithSpinner(UserList);\r\n","import { ExpansionPanel, ExpansionPanelSummary, Typography } from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport React, { Component } from \"react\";\r\nimport { checkIfEmpty } from \"../../../helpers/common.helper\";\r\nimport UserList from \"./UserList\";\r\n\r\nexport default class Users extends Component {\r\n  render() {\r\n    const {\r\n      classes,\r\n      approvedUsers,\r\n      deleteUser,\r\n      updateAccess,\r\n      updateAdmin,\r\n      profileObj\r\n    } = this.props;\r\n\r\n    const userListProps = {\r\n      approvedUsers,\r\n      updateAccess,\r\n      profileObj,\r\n      updateAdmin,\r\n      deleteUser,\r\n      classes\r\n    };\r\n    return (\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography className={classes.heading}>Users</Typography>\r\n        </ExpansionPanelSummary>\r\n        <UserList isLoading={checkIfEmpty(approvedUsers)} {...userListProps} />\r\n      </ExpansionPanel>\r\n    );\r\n  }\r\n}\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport CleaningAdmin from \"./cleaning/CleaningAdmin\";\r\nimport FeedbackAdmin from \"./feedback/FeedbackAdmin\";\r\nimport Requests from \"./requests/Requests\";\r\nimport Users from \"./users/Users\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"100%\",\r\n    marginTop: \"5px\"\r\n  },\r\n  dense: {\r\n    marginTop: 19\r\n  },\r\n  menu: {\r\n    width: 200\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1)\r\n  },\r\n  button: {\r\n    marginBottom: \"10px\",\r\n    marginRight: \"10px\"\r\n  }\r\n}));\r\n\r\nexport default function AdminExpansionPanel(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Requests classes={classes} {...props} />\r\n      <Users classes={classes} {...props} />\r\n      <CleaningAdmin classes={classes} {...props} />\r\n      <FeedbackAdmin classes={classes} {...props} />\r\n    </div>\r\n  );\r\n}\r\n","import { Typography } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { postData } from \"../../actions/action\";\r\nimport { continuousCall } from \"../../constants/time.constants\";\r\nimport {\r\n  FETCH_ALL_REQUESTS,\r\n  FETCH_APPROVED_USERS,\r\n  FETCH_FEEDBACK\r\n} from \"../../constants/types.constants\";\r\nimport {\r\n  createUrl,\r\n  DELETE_USER_URL,\r\n  GET_ALL_REQUESTS_URL,\r\n  GET_APPROVED_USERS_URL,\r\n  GET_FEEDBACK_URL,\r\n  UPDATE_USER_ROLE_URL,\r\n  UPDATE_USER_URL\r\n} from \"../../constants/url.constants\";\r\nimport { getHeaders } from \"../../constants/user.constants\";\r\nimport AdminExpansionPanel from \"./AdminExpansionPanel\";\r\n\r\nclass Admin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      requests: [],\r\n      approvedUsers: []\r\n    };\r\n  }\r\n\r\n  updateUserRequest = (userObj, role, index) => {\r\n    const { requests } = this.state;\r\n    const { updateUserRole, profileObj } = this.props;\r\n    userObj.role = role;\r\n    updateUserRole(userObj, profileObj);\r\n    delete requests[index];\r\n    this.setState({ requests });\r\n  };\r\n\r\n  updateAdmin = (userObj, role, index) => {\r\n    const { approvedUsers } = this.state;\r\n    const { updateUserRole, profileObj } = this.props;\r\n    userObj.role = role;\r\n    updateUserRole(userObj, profileObj);\r\n    approvedUsers[index] = userObj;\r\n    this.setState({ approvedUsers });\r\n  };\r\n\r\n  updateAccess = (userObj, type, index) => {\r\n    const { approvedUsers } = this.state;\r\n    const { updateUser, profileObj } = this.props;\r\n    userObj.access[type] = !userObj.access[type];\r\n    updateUser(userObj, profileObj);\r\n    approvedUsers[index] = userObj;\r\n    this.setState({ approvedUsers });\r\n  };\r\n\r\n  deleteUser = (userObj, index) => {\r\n    const { approvedUsers } = this.state;\r\n    const { deleteUser, profileObj } = this.props;\r\n    deleteUser(userObj, profileObj);\r\n    delete approvedUsers[index];\r\n    this.setState({ approvedUsers });\r\n  };\r\n\r\n  fetchAllAdminData = props => {\r\n    const {\r\n      fetchRequests,\r\n      fetchApprovedUsers,\r\n      fetchFeedback,\r\n      profileObj\r\n    } = props;\r\n    fetchRequests(profileObj);\r\n    fetchApprovedUsers(profileObj);\r\n    fetchFeedback(profileObj);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.adminInterval = continuousCall(this.fetchAllAdminData, this.props);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { requests, approvedUsers } = this.props;\r\n    if (requests !== prevProps.requests) {\r\n      this.setState({ requests });\r\n    }\r\n    if (approvedUsers !== prevProps.approvedUsers) {\r\n      this.setState({ approvedUsers });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { requests, approvedUsers } = this.state;\r\n    return (\r\n      <div>\r\n        <Typography paragraph>Admin</Typography>\r\n        <AdminExpansionPanel\r\n          {...this.props}\r\n          requests={requests}\r\n          approvedUsers={approvedUsers}\r\n          updateUserRequest={this.updateUserRequest}\r\n          updateAdmin={this.updateAdmin}\r\n          updateAccess={this.updateAccess}\r\n          deleteUser={this.deleteUser}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.adminInterval);\r\n  }\r\n}\r\n\r\nAdmin.propTypes = {};\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  return {\r\n    requests: state.adminReducer.requests,\r\n    feedback: state.adminReducer.feedback,\r\n    approvedUsers: state.adminReducer.approvedUsers\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    fetchRequests: profileObj =>\r\n      dispatch(\r\n        postData(\r\n          createUrl(GET_ALL_REQUESTS_URL),\r\n          profileObj,\r\n          getHeaders(profileObj),\r\n          FETCH_ALL_REQUESTS\r\n        )\r\n      ),\r\n    fetchFeedback: profileObj =>\r\n      dispatch(\r\n        postData(\r\n          createUrl(GET_FEEDBACK_URL),\r\n          profileObj,\r\n          getHeaders(profileObj),\r\n          FETCH_FEEDBACK\r\n        )\r\n      ),\r\n    updateUserRole: (user, profileObj) =>\r\n      dispatch(\r\n        postData(createUrl(UPDATE_USER_ROLE_URL), user, getHeaders(profileObj))\r\n      ),\r\n    updateUser: (user, profileObj) =>\r\n      dispatch(\r\n        postData(createUrl(UPDATE_USER_URL), user, getHeaders(profileObj))\r\n      ),\r\n    fetchApprovedUsers: profileObj =>\r\n      dispatch(\r\n        postData(\r\n          createUrl(GET_APPROVED_USERS_URL),\r\n          profileObj,\r\n          getHeaders(profileObj),\r\n          FETCH_APPROVED_USERS\r\n        )\r\n      ),\r\n    deleteUser: (user, profileObj) =>\r\n      dispatch(\r\n        postData(createUrl(DELETE_USER_URL), user, getHeaders(profileObj))\r\n      )\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Admin);\r\n"],"sourceRoot":""}