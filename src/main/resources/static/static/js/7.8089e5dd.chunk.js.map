{"version":3,"sources":["constants/styles.constants.js","components/admin/cleaning/list/cleaning-list.styles.js","helpers/user.helper.js","icons/CheckIcon.js","icons/TimesIcon.js","components/admin/cleaning/auto-suggest/IntegrationAutosuggest.js","components/admin/cleaning/list/cleaning-list.constants.js","components/admin/cleaning/list/EditableUserInput.js","components/admin/cleaning/list/EditableList.js","icons/BellIcon.js","components/admin/cleaning/list/UserCleaningList.js","components/cleaning/Cleaning.js"],"names":["NEXT_CLASS","OLD_CLASS","UPCOMING_CLASS","HeaderTypography","styled","Typography","NotifyButton","Button","ListHeaderTypography","ListBody","List","CleaningAdminBody","div","findUserByName","userList","name","index","length","user","CheckIcon","xmlns","viewBox","d","Component","TimesIcon","renderInputComponent","inputProps","classes","inputRef","ref","other","fullWidth","InputProps","node","input","renderSuggestion","suggestion","query","isHighlighted","matches","match","parts","parse","selected","component","map","part","key","text","style","fontWeight","highlight","getSuggestionValue","useStyles","makeStyles","theme","root","flexGrow","container","position","suggestionsContainerOpen","zIndex","marginTop","spacing","left","right","display","suggestionsList","margin","padding","listStyleType","divider","height","IntegrationAutosuggest","props","label","placeholder","updateUser","userName","suggestions","React","useState","single","popper","state","setState","stateSuggestions","setSuggestions","autosuggestProps","onSuggestionsFetchRequested","value","inputValue","deburr","trim","toLowerCase","inputLength","count","filter","keep","slice","getSuggestions","onSuggestionsClearRequested","className","id","onChange","event","newValue","renderSuggestionsContainer","options","containerProps","square","children","LIST_STYLES","0","1","EditableUserInput","save","cleaningObj","toggleEdit","editUserName","this","onClick","EditableList","approvedUsers","updateSchedule","profileObj","updatedUser","USER_NAME_MAPPING","userName1","userName2","header","generatedList","checkIfEmpty","dense","Divider","variant","ListItem","alignItems","Date","date","toLocaleDateString","primary","Fragment","user1","user2","BellIcon","compareDateWithToday","today","setHours","compareDates","UserCleaningList","isStyled","sendEventInvites","list","obj","val","setStyles","color","Cleaning","fetchSchedule","fetchFullSchedule","fetchApprovedUsers","userCleaningSchedule","fullCleaningSchedule","isAccessible","ACCESS_CLEANING_KEY","paragraph","SimpleExpansionPanel","panelHeader","isEditable","PermissionDenied","connect","ownProps","adminReducer","cleaningReducer","dispatch","postData","createUrl","GET_APPROVED_USERS_URL","getHeaders","FETCH_APPROVED_USERS","GET_SCHEDULE_BY_USER_ID_URL","FETCH_CLEANING_SCHEDULE_FOR_USER","GET_FULL_SCHEDULE_URL","FETCH_FULL_CLEANING_SCHEDULE","UPDATE_SCHEDULE_URL","SEND_EVENT_INVITES_URL","email"],"mappings":"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","file":"static/js/7.8089e5dd.chunk.js","sourcesContent":["export const NEXT_CLASS = \"next\";\r\nexport const OLD_CLASS = \"old\";\r\nexport const UPCOMING_CLASS = \"upcoming\";\r\n","import { Button, List, Typography } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const HeaderTypography = styled(Typography)`\r\n  font-size: 16px;\r\n  margin-top: 14px;\r\n  padding-top: 10px;\r\n  padding-left: 10px;\r\n`;\r\n\r\nexport const NotifyButton = styled(Button)`\r\n  margin-left: 16px !important;\r\n  margin-bottom: 16px !important;\r\n`;\r\n\r\nexport const ListHeaderTypography = styled(Typography)`\r\n  font-size: 16px !important;\r\n  margin-top: 14px !important;\r\n`;\r\n\r\nexport const ListBody = styled(List)`\r\n  margin: -8px -16px !important;\r\n`;\r\n\r\nexport const CleaningAdminBody = styled.div`\r\n  padding: 8px 16px;\r\n`;\r\n","export const findUserByName = (userList, name) => {\r\n  for (let index = 0; index < userList.length; index++) {\r\n    const user = userList[index];\r\n    if (user.name === name) return user;\r\n  }\r\n  return { name };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { CheckIconSvg } from \"./icons.styles\";\r\n\r\nexport default class CheckIcon extends Component {\r\n  render() {\r\n    return (\r\n      <CheckIconSvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n        <path d=\"M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z\" />\r\n      </CheckIconSvg>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class TimesIcon extends Component {\r\n  render() {\r\n    return (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n        <path d=\"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\" />\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n","import MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport match from \"autosuggest-highlight/match\";\r\nimport parse from \"autosuggest-highlight/parse\";\r\nimport deburr from \"lodash/deburr\";\r\nimport React from \"react\";\r\nimport Autosuggest from \"react-autosuggest\";\r\n\r\nfunction renderInputComponent(inputProps) {\r\n  const { classes, inputRef = () => {}, ref, ...other } = inputProps;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputRef: node => {\r\n          ref(node);\r\n          inputRef(node);\r\n        },\r\n        classes: {\r\n          input: classes.input\r\n        }\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\r\n  const matches = match(suggestion.name, query);\r\n  const parts = parse(suggestion.name, matches);\r\n\r\n  return (\r\n    <MenuItem selected={isHighlighted} component=\"div\">\r\n      <div>\r\n        {parts.map(part => (\r\n          <span\r\n            key={part.text}\r\n            style={{ fontWeight: part.highlight ? 500 : 400 }}\r\n          >\r\n            {part.text}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nfunction getSuggestions(suggestions, value) {\r\n  const inputValue = deburr(value.trim()).toLowerCase();\r\n  const inputLength = inputValue.length;\r\n  let count = 0;\r\n\r\n  return inputLength === 0\r\n    ? []\r\n    : suggestions.filter(suggestion => {\r\n        const keep =\r\n          count < 5 &&\r\n          suggestion.name.slice(0, inputLength).toLowerCase() === inputValue;\r\n\r\n        if (keep) {\r\n          count += 1;\r\n        }\r\n\r\n        return keep;\r\n      });\r\n}\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n  return suggestion.name;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  container: {\r\n    position: \"relative\"\r\n  },\r\n  suggestionsContainerOpen: {\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0\r\n  },\r\n  suggestion: {\r\n    display: \"block\"\r\n  },\r\n  suggestionsList: {\r\n    margin: 0,\r\n    padding: 0,\r\n    listStyleType: \"none\"\r\n  },\r\n  divider: {\r\n    height: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nexport default function IntegrationAutosuggest(props) {\r\n  const { label, placeholder, updateUser, userName } = props;\r\n  let { suggestions } = props;\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    single: \"\",\r\n    popper: \"\"\r\n  });\r\n\r\n  const [stateSuggestions, setSuggestions] = React.useState([]);\r\n\r\n  const handleSuggestionsFetchRequested = ({ value }) => {\r\n    setSuggestions(getSuggestions(suggestions, value));\r\n  };\r\n\r\n  const handleSuggestionsClearRequested = () => {\r\n    setSuggestions([]);\r\n  };\r\n\r\n  const handleChange = name => (event, { newValue }) => {\r\n    setState({\r\n      ...state,\r\n      [name]: newValue\r\n    });\r\n    updateUser(userName, newValue);\r\n  };\r\n\r\n  const autosuggestProps = {\r\n    renderInputComponent,\r\n    suggestions: stateSuggestions,\r\n    onSuggestionsFetchRequested: handleSuggestionsFetchRequested,\r\n    onSuggestionsClearRequested: handleSuggestionsClearRequested,\r\n    getSuggestionValue,\r\n    renderSuggestion\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.divider} />\r\n      <Autosuggest\r\n        {...autosuggestProps}\r\n        inputProps={{\r\n          classes,\r\n          id: \"react-autosuggest-simple\",\r\n          label: label,\r\n          placeholder: placeholder,\r\n          value: state.single,\r\n          onChange: handleChange(\"single\")\r\n        }}\r\n        theme={{\r\n          container: classes.container,\r\n          suggestionsContainerOpen: classes.suggestionsContainerOpen,\r\n          suggestionsList: classes.suggestionsList,\r\n          suggestion: classes.suggestion\r\n        }}\r\n        renderSuggestionsContainer={options => (\r\n          <Paper {...options.containerProps} square>\r\n            {options.children}\r\n          </Paper>\r\n        )}\r\n      />\r\n      <div className={classes.divider} />\r\n    </div>\r\n  );\r\n}\r\n","import { NEXT_CLASS, OLD_CLASS } from \"../../../../constants/styles.constants\";\r\n\r\nexport const LIST_STYLES = {\r\n  0: NEXT_CLASS,\r\n  1: NEXT_CLASS,\r\n  \"-1\": OLD_CLASS\r\n};\r\n","import { Typography } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport CheckIcon from \"../../../../icons/CheckIcon\";\r\nimport TimesIcon from \"../../../../icons/TimesIcon\";\r\nimport IntegrationAutosuggest from \"../auto-suggest/IntegrationAutosuggest\";\r\n\r\nexport default class EditableUserInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.name = props.user.name;\r\n    this.state = { editUserName: false };\r\n  }\r\n\r\n  save = (cleaningObj, userName) => {\r\n    this.name = this.props.value;\r\n    this.props.save(cleaningObj, userName);\r\n  };\r\n\r\n  toggleEdit = () => {\r\n    this.setState({ ...this.state, editUserName: !this.state.editUserName });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      cleaningObj,\r\n      suggestions,\r\n      userName,\r\n      placeholder,\r\n      updateUser\r\n    } = this.props;\r\n    const { editUserName } = this.state;\r\n    return (\r\n      <div>\r\n        {!editUserName && (\r\n          <Typography onClick={() => this.toggleEdit()}>{this.name}</Typography>\r\n        )}\r\n        {editUserName && (\r\n          <div>\r\n            <IntegrationAutosuggest\r\n              suggestions={suggestions}\r\n              placeholder={placeholder}\r\n              updateUser={updateUser}\r\n              userName={userName}\r\n            />\r\n            <span\r\n              onClick={() => {\r\n                this.save(cleaningObj, userName);\r\n                this.toggleEdit();\r\n              }}\r\n            >\r\n              <CheckIcon />\r\n            </span>\r\n            <span onClick={() => this.toggleEdit()}>\r\n              <TimesIcon  />\r\n            </span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Divider, List, ListItem, Typography } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport { USER_NAME_MAPPING } from \"../../../../constants/user.constants\";\r\nimport { checkIfEmpty } from \"../../../../helpers/common.helper\";\r\nimport { findUserByName } from \"../../../../helpers/user.helper\";\r\nimport { StyledListItemAvatar, StyledListItemText } from \"../../../common/common.styles\";\r\nimport EditableUserInput from \"./EditableUserInput\";\r\n\r\nexport default class EditableList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userName1: \"\",\r\n      userName2: \"\"\r\n    };\r\n  }\r\n\r\n  updateUser = (userName, value) => {\r\n    this.setState({ ...this.state, [userName]: value });\r\n  };\r\n\r\n  save = (cleaningObj, key) => {\r\n    const { approvedUsers, updateSchedule, profileObj } = this.props;\r\n    const userName = this.state[key];\r\n    const updatedUser = findUserByName(approvedUsers, userName);\r\n    cleaningObj[USER_NAME_MAPPING[key]] = updatedUser;\r\n    updateSchedule(cleaningObj, profileObj);\r\n  };\r\n\r\n  render() {\r\n    const { userName1, userName2 } = this.state;\r\n    const { header, approvedUsers, placeholder, generatedList } = this.props;\r\n    return (\r\n      !checkIfEmpty(generatedList) && (\r\n        <div>\r\n          {header && <Typography className=\"header\">{header}</Typography>}\r\n          <List dense={true}>\r\n            {generatedList.map(cleaningObj => {\r\n              return (\r\n                <div key={cleaningObj.id}>\r\n                  <Divider variant=\"fullWidth\" component=\"li\" />\r\n                  <ListItem\r\n                    className={cleaningObj.className}\r\n                    alignItems=\"flex-start\"\r\n                  >\r\n                    <StyledListItemAvatar>\r\n                      <span>\r\n                        {new Date(cleaningObj.date).toLocaleDateString()}\r\n                      </span>\r\n                    </StyledListItemAvatar>\r\n                    <StyledListItemText\r\n                      primary={\r\n                        <React.Fragment>\r\n                          <EditableUserInput\r\n                            cleaningObj={cleaningObj}\r\n                            user={cleaningObj.user1}\r\n                            suggestions={approvedUsers}\r\n                            placeholder={placeholder}\r\n                            updateUser={this.updateUser}\r\n                            userName=\"userName1\"\r\n                            value={userName1}\r\n                            save={this.save}\r\n                          />\r\n                          <EditableUserInput\r\n                            cleaningObj={cleaningObj}\r\n                            user={cleaningObj.user2}\r\n                            suggestions={approvedUsers}\r\n                            placeholder={placeholder}\r\n                            updateUser={this.updateUser}\r\n                            userName=\"userName2\"\r\n                            value={userName2}\r\n                            save={this.save}\r\n                          />\r\n                        </React.Fragment>\r\n                      }\r\n                    />\r\n                  </ListItem>\r\n                </div>\r\n              );\r\n            })}\r\n          </List>\r\n        </div>\r\n      )\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { BellIconSvg } from \"./icons.styles\";\r\n\r\nexport default class BellIcon extends Component {\r\n  render() {\r\n    return (\r\n      <BellIconSvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\r\n        <path d=\"M224 512c35.32 0 63.97-28.65 63.97-64H160.03c0 35.35 28.65 64 63.97 64zm215.39-149.71c-19.32-20.76-55.47-51.99-55.47-154.29 0-77.7-54.48-139.9-127.94-155.16V32c0-17.67-14.32-32-31.98-32s-31.98 14.33-31.98 32v20.84C118.56 68.1 64.08 130.3 64.08 208c0 102.3-36.15 133.53-55.47 154.29-6 6.45-8.66 14.16-8.61 21.71.11 16.4 12.98 32 32.1 32h383.8c19.12 0 32-15.6 32.1-32 .05-7.55-2.61-15.27-8.61-21.71z\" />\r\n      </BellIconSvg>\r\n    );\r\n  }\r\n}\r\n","import { Divider, List, ListItem, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { UPCOMING_CLASS } from \"../../../../constants/styles.constants\";\r\nimport { checkIfEmpty } from \"../../../../helpers/common.helper\";\r\nimport { compareDates } from \"../../../../helpers/date.helper\";\r\nimport BellIcon from \"../../../../icons/BellIcon\";\r\nimport { StyledListItemAvatar, StyledListItemText } from \"../../../common/common.styles\";\r\n\r\nimport { LIST_STYLES } from \"./cleaning-list.constants\";\r\nimport { NotifyButton } from \"./cleaning-list.styles\";\r\n\r\n/* accepts date and comapres with current date to return 1, -1 or 0 */\r\nconst compareDateWithToday = date => {\r\n  let today = new Date();\r\n  today.setHours(0, 0, 0, 0);\r\n  return compareDates(date, today);\r\n};\r\n\r\n/* sets styles of all objects in the list based on date */\r\nconst setStyles = list => {\r\n  for (let index = 0; index < list.length; index++) {\r\n    const obj = list[index];\r\n    const val = compareDateWithToday(obj.date);\r\n    obj.className = LIST_STYLES[val];\r\n    if (val !== -1) {\r\n      for (index++; index < list.length; index++) {\r\n        const obj = list[index];\r\n        obj.className = UPCOMING_CLASS;\r\n      }\r\n      return;\r\n    }\r\n  }\r\n};\r\n\r\nexport default function UserCleaningList(props) {\r\n  const { header, isStyled, sendEventInvites, profileObj } = props;\r\n  let { generatedList } = props;\r\n  if (!checkIfEmpty(generatedList) && isStyled) setStyles(generatedList);\r\n  return (\r\n    !checkIfEmpty(generatedList) && (\r\n      <div>\r\n        {header && <Typography className=\"header\">{header}</Typography>}\r\n        <List dense={true}>\r\n          {generatedList.map((obj, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <Divider variant=\"fullWidth\" component=\"li\" />\r\n                <ListItem className={obj.className} alignItems=\"flex-start\">\r\n                  <StyledListItemAvatar>\r\n                    <span>{new Date(obj.date).toLocaleDateString()}</span>\r\n                  </StyledListItemAvatar>\r\n                  <StyledListItemText\r\n                    primary={\r\n                      <React.Fragment>\r\n                        <Typography>{obj.user1.name}</Typography>\r\n                        <Typography>{obj.user2.name}</Typography>\r\n                      </React.Fragment>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n              </div>\r\n            );\r\n          })}\r\n        </List>\r\n        <NotifyButton\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => sendEventInvites(profileObj)}\r\n        >\r\n          <span>\r\n            Notify\r\n            <BellIcon />\r\n          </span>\r\n        </NotifyButton>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","import { Typography } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { postData } from \"../../actions/action\";\r\nimport { FETCH_APPROVED_USERS, FETCH_CLEANING_SCHEDULE_FOR_USER, FETCH_FULL_CLEANING_SCHEDULE } from \"../../constants/types.constants\";\r\nimport { createUrl, GET_APPROVED_USERS_URL, GET_FULL_SCHEDULE_URL, GET_SCHEDULE_BY_USER_ID_URL, SEND_EVENT_INVITES_URL, UPDATE_SCHEDULE_URL } from \"../../constants/url.constants\";\r\nimport { ACCESS_CLEANING_KEY, getHeaders } from \"../../constants/user.constants\";\r\nimport { isAccessible } from \"../../helpers/visibility.helper\";\r\nimport EditableList from \"../admin/cleaning/list/EditableList\";\r\nimport UserCleaningList from \"../admin/cleaning/list/UserCleaningList\";\r\nimport PermissionDenied from \"../common/PermissionDenied\";\r\nimport SimpleExpansionPanel from \"../food/SimpleExpansionPanel\";\r\n\r\nclass Cleaning extends Component {\r\n  componentDidMount() {\r\n    const {\r\n      profileObj,\r\n      fetchSchedule,\r\n      fetchFullSchedule,\r\n      fetchApprovedUsers\r\n    } = this.props;\r\n    fetchSchedule(profileObj);\r\n    fetchFullSchedule(profileObj);\r\n    fetchApprovedUsers(profileObj);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      profileObj,\r\n      userCleaningSchedule,\r\n      fullCleaningSchedule,\r\n      approvedUsers\r\n    } = this.props;\r\n    return isAccessible(profileObj, ACCESS_CLEANING_KEY) ? (\r\n      <div>\r\n        <Typography paragraph>Cleaning</Typography>\r\n        <SimpleExpansionPanel {...this.props}>\r\n          <UserCleaningList\r\n            isStyled={true}\r\n            panelHeader=\"Your Schedule\"\r\n            generatedList={userCleaningSchedule}\r\n            {...this.props}\r\n          />\r\n          <EditableList\r\n            approvedUsers={approvedUsers}\r\n            panelHeader=\"Full Schedule\"\r\n            generatedList={fullCleaningSchedule}\r\n            isEditable={true}\r\n            placeholder=\"Search a User\"\r\n          />\r\n        </SimpleExpansionPanel>\r\n      </div>\r\n    ) : (\r\n      <PermissionDenied profileObj={profileObj} />\r\n    );\r\n  }\r\n}\r\n\r\nCleaning.propTypes = {};\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  return {\r\n    approvedUsers: state.adminReducer.approvedUsers,\r\n    userCleaningSchedule: state.cleaningReducer.userCleaningSchedule,\r\n    fullCleaningSchedule: state.cleaningReducer.fullCleaningSchedule\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    fetchApprovedUsers: profileObj =>\r\n      dispatch(\r\n        postData(\r\n          createUrl(GET_APPROVED_USERS_URL),\r\n          profileObj,\r\n          getHeaders(profileObj),\r\n          FETCH_APPROVED_USERS\r\n        )\r\n      ),\r\n    fetchSchedule: profileObj =>\r\n      dispatch(\r\n        postData(\r\n          createUrl(GET_SCHEDULE_BY_USER_ID_URL),\r\n          profileObj,\r\n          getHeaders(profileObj),\r\n          FETCH_CLEANING_SCHEDULE_FOR_USER\r\n        )\r\n      ),\r\n    fetchFullSchedule: profileObj =>\r\n      dispatch(\r\n        postData(\r\n          createUrl(GET_FULL_SCHEDULE_URL),\r\n          profileObj,\r\n          getHeaders(profileObj),\r\n          FETCH_FULL_CLEANING_SCHEDULE\r\n        )\r\n      ),\r\n    updateSchedule: (cleaningObj, profileObj) =>\r\n      dispatch(\r\n        postData(\r\n          createUrl(UPDATE_SCHEDULE_URL),\r\n          cleaningObj,\r\n          getHeaders(profileObj)\r\n        )\r\n      ),\r\n    sendEventInvites: profileObj =>\r\n      dispatch(\r\n        postData(\r\n          createUrl(SEND_EVENT_INVITES_URL),\r\n          { email: profileObj.email },\r\n          getHeaders(profileObj)\r\n        )\r\n      )\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cleaning);\r\n"],"sourceRoot":""}