{"version":3,"sources":["constants/types.constants.js","utils/transformerUtils.jsx","actions/action.js","components/common/CircularIndeterminate.js","constants/time.constants.js","constants/url.constants.js","helpers/date.helper.js","constants/session.constants.js","helpers/session.helper.js","components/about-us/AboutUs.js","helpers/user.helper.js","components/admin/cleaning/auto-suggest/IntegrationAutosuggest.js","helpers/common.helper.js","components/admin/cleaning/date-picker/MaterialUIPickers.js","constants/styles.constants.js","components/admin/cleaning/list/GeneratedList.js","components/admin/cleaning/list/CleaningList.js","components/admin/cleaning/CleaningAdmin.js","components/admin/feedback/FeedbackAdmin.js","constants/user.constants.js","components/admin/requests/Requests.js","helpers/visibility.helper.js","components/common/Icons.js","components/admin/users/Users.js","components/admin/AdminExpansionPanel.js","components/admin/Admin.js","logos/CheckIcon.js","logos/TimesIcon.js","components/admin/cleaning/list/EditableUserInput.js","components/admin/cleaning/list/EditableList.js","logos/BellIcon.js","components/admin/cleaning/list/UserCleaningList.js","components/common/PermissionDenied.js","components/food/SimpleExpansionPanel.js","components/cleaning/Cleaning.js","models/FeedbackModel.js","components/feedback/Feedback.js","constants/vote.constants.js","helpers/food.helper.js","models/VoteModel.js","models/RecommendationModel.js","components/food/recommendation/Recommendation.js","components/food/vote/VoteTable.js","components/food/vote/Vote.js","components/food/Food.js","models/GroceryModel.js","components/admin/grocery/GroceryAdmin.js","components/grocery/Grocery.js","components/schedule/Schedule.js","constants/route.constants.js","MiniDrawer.js","Home.js","Login.js","App.js","reducers/admin.reducer.js","reducers/cleaning.reducer.js","reducers/recommendation.reducer.js","reducers/user.reducer.js","reducers/vote.reducer.js","reducers/app.reducer.js","serviceWorker.js","index.js"],"names":["FETCH_USER","FETCH_ALL_RECOS","FETCH_CLEANING_SCHEDULE_FOR_USER","FETCH_FULL_CLEANING_SCHEDULE","FETCH_ALL_VOTES","FETCH_VOTES_BY_EMAIL","FETCH_GROCERY","FETCH_FEEDBACK","FETCH_ALL_REQUESTS","FETCH_APPROVED_USERS","LOGOUT","DEFAULT","transformDefault","data","getData","url","type","transformer","dispatch","axios","get","then","payload","catch","error","console","log","postData","post","resetState","useStyles","makeStyles","theme","progress","margin","spacing","alignment","textAlign","CircularIndeterminate","classes","className","CircularProgress","continuousCall","callback","params","setInterval","createUrl","path","origin","window","location","includes","ADD_RECO_URL","DELETE_RECO_URL","GET_ALL_RECOS_URL","GET_ALL_VOTES_URL","GET_ALL_VOTES_BY_EMAIL_URL","POST_VOTE_URL","GET_USER_URL","GET_APPROVED_USERS_URL","GET_SCHEDULE_BY_USER_ID_URL","GET_FULL_SCHEDULE_URL","UPDATE_SCHEDULE_URL","SAVE_CLEANING_SCHEDULE_URL","DELETE_CLEANING_SCHEDULE_URL","SEND_EVENT_INVITES_URL","ADD_GROCERY_URL","GET_GROCERY_URL","ADD_FEEDBACK_URL","GET_FEEDBACK_URL","GET_ALL_REQUESTS_URL","UPDATE_USER_ROLE_URL","UPDATE_USER_URL","DELETE_USER_URL","getFirstDayofTheMonth","startDate","Date","setDate","setHours","getLastDayofTheMonth","today","getFullYear","getMonth","addDaysToDate","curr","days","oldDate","valueOf","date","getDate","compareDates","date1","date2","GOOGLE_USER_PROFILE_OBJ_KEY","getProfileObj","profileObjString","sessionStorage","getItem","JSON","parse","AboutUs","Typography","paragraph","Paper","style","padding","Grid","container","direction","justify","alignItems","item","borderRadius","src","alt","variant","href","textDecoration","color","IconButton","target","Component","findUserByName","userList","name","index","length","user","renderInputComponent","inputProps","inputRef","ref","other","TextField","fullWidth","InputProps","node","input","renderSuggestion","suggestion","query","isHighlighted","matches","match","parts","MenuItem","selected","component","map","part","key","text","fontWeight","highlight","getSuggestionValue","root","flexGrow","position","suggestionsContainerOpen","zIndex","marginTop","left","right","display","suggestionsList","listStyleType","divider","height","IntegrationAutosuggest","props","label","placeholder","updateUser","userName","suggestions","React","useState","single","popper","state","setState","stateSuggestions","setSuggestions","autosuggestProps","onSuggestionsFetchRequested","value","inputValue","deburr","trim","toLowerCase","inputLength","count","filter","keep","slice","getSuggestions","onSuggestionsClearRequested","id","onChange","event","newValue","renderSuggestionsContainer","options","containerProps","square","children","checkIfEmpty","obj","Object","keys","MaterialUIPickers","defaultDate","updateDate","selectedDate","setSelectedDate","utils","DateFnsUtils","width","format","KeyboardButtonProps","LIST_STYLES","0","1","compareDateWithToday","setStyles","list","val","GeneratedList","header","saveCleaningSchedule","isStyled","reset","generatedList","List","dense","Divider","ListItem","ListItemAvatar","minWidth","toLocaleDateString","ListItemText","primary","Fragment","user1","user2","Button","onClick","marginLeft","aria-hidden","generateList","firstDate","lastDate","start","end","push","CleaningList","fontSize","paddingLeft","CleaningAdmin","INITIAL_STATE","userName1","userName2","bind","this","approvedUsers","fetchApprovedUsers","cleaningInterval","fetchAllCleaningData","deleteSchedule","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","heading","Fab","size","aria-label","addToList","clearInterval","connect","ownProps","adminReducer","schedule","FeedbackAdmin","feedback","imageUrl","toLocaleTimeString","UNKNOWN_MESSAGE","ROLES","desc","message","USER_NAME_MAPPING","Requests","requests","updateUserRequest","request","isSuperAdmin","profileObj","roles","role","isAdmin","isAdminVisibile","isAccessible","access","FoodIcon","GroceryIcon","CleaningIcon","ScheduleIcon","AdminIcon","FeedbackIcon","AboutUsIcon","Users","deleteUser","updateAccess","updateAdmin","food","grocery","cleaning","disabled","button","typography","pxToRem","fontWeightRegular","flexWrap","textField","marginRight","menu","rightIcon","marginBottom","AdminExpansionPanel","Admin","userObj","updateUserRole","fetchRequests","fetchFeedback","adminInterval","fetchAllAdminData","prevProps","CheckIcon","xmlns","viewBox","d","TimesIcon","EditableUserInput","editUserName","toggleEdit","save","cleaningObj","EditableList","updatedUser","updateSchedule","BellIcon","UserCleaningList","sendEventInvites","email","PermissionDenied","SimpleExpansionPanel","Children","child","panelHeader","ExpansionPanelDetails","panelClassName","cloneElement","Cleaning","fetchSchedule","fetchFullSchedule","userCleaningSchedule","fullCleaningSchedule","isEditable","cleaningReducer","userId","FeedbackModel","Feedback","sendFeedback","handleChange","$event","multiline","rows","feedbackObj","UPVOTE","DOWNVOTE","VOTE_POINTS_KEY","mergeRecommendationsAndVotes","recommendationData","voteData","foodData","voteDataIsEmpty","forEach","recommendation","points","voteFoodData","recommendationID","vote","newFoodData","generatePopularFoodData","popularFoodData","sort","compareFoodByPoints","obj1","obj2","comparison","VoteModel","recommendationId","RecommendationModel","foodName","Recommendation","addReco","addRecommendation","fetchAllFoodData","updateWeek","currentWeek","setTimeout","paper","overflowX","VoteTable","deleteRecommendation","Table","table","TableHead","TableRow","TableCell","TableBody","row","scope","Icon","align","Vote","Food","week","addVote","deleteRecommendationById","fetchRecommendations","fetchVotes","fetchVotesByEmail","endDate","foodInterval","prevState","voteDataByEmail","componentDidMount","lastWeek","FormControl","InputLabel","htmlFor","Select","recommendationReducer","voteReducer","weekStartDate","weekEndDate","GroceryModel","itemName","GroceryAdmin","fetchGrocery","getDay","getLastWeekStartDate","groceryInterval","fetchGroceryData","marginStyle","Grocery","sendGrocery","groceryObj","Schedule","route","appBar","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","breakpoints","up","toolbar","justifyContent","mixins","content","title","navigate","history","MiniDrawer","useTheme","open","setOpen","anchorEl","setAnchorEl","openMenu","Boolean","logoutSuccess","CssBaseline","AppBar","clsx","Toolbar","edge","noWrap","aria-haspopup","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","clientId","buttonText","onLogoutSuccess","render","renderProps","Drawer","ListItemIcon","exact","to","Home","idleTimer","_logoutSuccess","onIdle","_onIdle","removeItem","getUser","checkIfUserIsLoggedIn","profileObjWithRole","currWeek","day","dispalyValue","getLastWeek","nextWeek","getCurrentWeek","element","document","debounce","timeout","userReducer","Login","successResponseGoogle","failureResponseGoogle","response","setItem","stringify","onSuccess","onFailure","cookiePolicy","App","from","initialState","action","appReducer","combineReducers","hostname","store","createStore","applyMiddleware","thunk","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9d25f941.chunk.js","sourcesContent":["export const FETCH_USER = \"FETCH_USER\";\r\n\r\nexport const FETCH_ALL_RECOS = \"FETCH_ALL_RECOS\";\r\n\r\nexport const FETCH_CLEANING_SCHEDULE_FOR_USER =\r\n  \"FETCH_CLEANING_SCHEDULE_FOR_USER\";\r\nexport const FETCH_FULL_CLEANING_SCHEDULE = \"FETCH_FULL_CLEANING_SCHEDULE\";\r\n\r\nexport const FETCH_CLEANING_SCHEDULE = \"FETCH_CLEANING_SCHEDULE\";\r\n\r\nexport const FETCH_ALL_VOTES = \"FETCH_ALL_VOTES\";\r\nexport const FETCH_VOTES_BY_EMAIL = \"FETCH_VOTES_BY_EMAIL\";\r\n\r\nexport const FETCH_GROCERY = \"FETCH_GROCERY\";\r\n\r\nexport const FETCH_FEEDBACK = \"FETCH_FEEDBACK\";\r\n\r\nexport const FETCH_ALL_REQUESTS = \"FETCH_ALL_REQUESTS\";\r\nexport const FETCH_APPROVED_USERS = \"FETCH_APPROVED_USERS\";\r\n\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const DEFAULT = \"DEFAULT\";\r\n","\r\nexport const transformDefault = (data) => {\r\n    return data;\r\n}\r\n","import axios from \"axios\";\r\nimport { DEFAULT } from \"../constants/types.constants\";\r\nimport { transformDefault } from \"../utils/transformerUtils\";\r\n\r\nexport const getData = (\r\n  url,\r\n  type,\r\n  transformer = transformDefault\r\n) => dispatch => {\r\n  axios\r\n    .get(url)\r\n    .then(payload => {\r\n      dispatch({ type, data: transformer(payload.data) });\r\n    })\r\n    .catch(error => {\r\n      console.log(type, url, error);\r\n      dispatch({ type, data: {} });\r\n    });\r\n};\r\n\r\nexport const postData = (\r\n  url,\r\n  data,\r\n  type = DEFAULT,\r\n  transformer = transformDefault\r\n) => dispatch => {\r\n  axios\r\n    .post(url, data)\r\n    .then(payload => {\r\n      dispatch({ type, data: transformer(payload.data) });\r\n    })\r\n    .catch(error => {\r\n      console.log(type, url, error);\r\n      dispatch({ type, data: {} });\r\n    });\r\n};\r\n\r\nexport const resetState = type => dispatch => {\r\n  dispatch({ type, data: {} });\r\n};\r\n","import CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  progress: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  alignment: { textAlign: \"center\" }\r\n}));\r\n\r\nexport default function CircularIndeterminate() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.alignment}>\r\n      <CircularProgress className={classes.progress} />\r\n    </div>\r\n  );\r\n}\r\n","export const getRefreshTime = () => {\r\n  return 1000 * 5; /* 5 seconds */\r\n};\r\n\r\nexport const IDLE_TIME = 1000 * 60 * 5; /* 5 minutes */\r\n\r\nexport const continuousCall = (callback, ...params) => {\r\n  callback(...params);\r\n  return setInterval(() => callback(...params), getRefreshTime());\r\n};\r\n","export const createUrl = path => {\r\n  let origin = window.location.origin;\r\n  if (origin.includes(\"localhost\")) {\r\n    origin = \"http://localhost:8080\";\r\n  }\r\n  return origin + \"/\" + path;\r\n};\r\n\r\nexport const ADD_RECO_URL = \"recommendation/addRecommendation\";\r\nexport const DELETE_RECO_URL = \"recommendation/deleteRecommendation\";\r\nexport const GET_ALL_RECOS_URL = \"recommendation/getAllRecommendations\";\r\n\r\nexport const GET_ALL_VOTES_URL = \"vote/getAllVotes\";\r\nexport const GET_ALL_VOTES_BY_EMAIL_URL = \"vote/getAllVotesByEmail\";\r\nexport const POST_VOTE_URL = \"vote/addVote\";\r\n\r\nexport const GET_USER_URL = \"user/getUser\";\r\nexport const GET_APPROVED_USERS_URL = \"user/getApprovedUsers\";\r\n\r\nexport const GET_SCHEDULE_BY_USER_ID_URL = \"cleaning/getCleaningSchedule\";\r\nexport const GET_FULL_SCHEDULE_URL = \"cleaning/getFullCleaningSchedule\";\r\nexport const UPDATE_SCHEDULE_URL = \"cleaning/updateCleaningSchedule\";\r\nexport const SAVE_CLEANING_SCHEDULE_URL = \"cleaning/saveCleaningSchedule\";\r\nexport const DELETE_CLEANING_SCHEDULE_URL = \"cleaning/deleteSchedule\";\r\n\r\nexport const SEND_EVENT_INVITES_URL = \"calendar/sendEventInvites\";\r\n\r\nexport const ADD_GROCERY_URL = \"grocery/addItem\";\r\nexport const GET_GROCERY_URL = \"grocery/getItems\";\r\n\r\nexport const ADD_FEEDBACK_URL = \"feedback/addFeedback\";\r\nexport const GET_FEEDBACK_URL = \"feedback/getFeedback\";\r\n\r\nexport const GET_ALL_REQUESTS_URL = \"admin/getRequests\";\r\nexport const UPDATE_USER_ROLE_URL = \"admin/updateUserRole\";\r\nexport const UPDATE_USER_URL = \"admin/updateUser\";\r\nexport const DELETE_USER_URL = \"admin/deleteUser\";\r\n\r\nexport const DOWNLOAD_SCHEDULE_URL = \"schedule/download\";\r\n","export function getWeek() {\r\n  let curr = new Date();\r\n  curr.setHours(0, 0, 0, 0);\r\n\r\n  let week = [];\r\n  for (let i = 1; i <= 7; i++) {\r\n    let first = curr.getDate() - curr.getDay() + i;\r\n    let day = new Date(curr.setDate(first));\r\n    week.push(day);\r\n  }\r\n  return week;\r\n}\r\n\r\nexport function getLastWeek() {\r\n  let currWeek = {};\r\n\r\n  let curr = new Date();\r\n  curr.setHours(0, 0, 0, 0);\r\n\r\n  let date = curr.getDate() - curr.getDay() - 6;\r\n  let day = new Date(curr.setDate(date));\r\n  currWeek.startDate = { dispalyValue: day.toLocaleDateString(), value: day };\r\n\r\n  date = curr.getDate() - curr.getDay() + 8;\r\n  day = new Date(curr.setDate(date));\r\n  currWeek.endDate = { dispalyValue: day.toLocaleDateString(), value: day };\r\n\r\n  return currWeek;\r\n}\r\n\r\nexport function getCurrentWeek() {\r\n  let nextWeek = {};\r\n\r\n  let curr = new Date();\r\n  curr.setHours(0, 0, 0, 0);\r\n\r\n  let date = curr.getDate() - curr.getDay() + 1;\r\n  let day = new Date(curr.setDate(date));\r\n  nextWeek.startDate = { dispalyValue: day.toLocaleDateString(), value: day };\r\n\r\n  date = curr.getDate() - curr.getDay() + 8;\r\n  day = new Date(curr.setDate(date));\r\n  nextWeek.endDate = { dispalyValue: day.toLocaleDateString(), value: day };\r\n\r\n  return nextWeek;\r\n}\r\n\r\nexport function getLastWeekStartDate() {\r\n  let curr = new Date();\r\n  curr.setHours(0, 0, 0, 0);\r\n\r\n  let date = curr.getDate() - curr.getDay() - 6;\r\n  let startDay = new Date(curr.setDate(date));\r\n  return startDay;\r\n}\r\n\r\nexport function getFirstDayofTheMonth() {\r\n  let startDate = new Date();\r\n  startDate.setDate(1);\r\n  startDate.setHours(0, 0, 0, 0);\r\n  return startDate;\r\n}\r\nexport function getLastDayofTheMonth() {\r\n  let today = new Date();\r\n  today.setHours(0, 0, 0, 0);\r\n  return new Date(today.getFullYear(), today.getMonth() + 1, 0);\r\n}\r\n\r\nexport function addDaysToDate(curr, days) {\r\n  let oldDate = new Date(curr.valueOf());\r\n  let date = oldDate.getDate() + days;\r\n  let newDate = new Date(oldDate.setDate(date));\r\n  return newDate;\r\n}\r\n\r\nexport function compareDates(date1, date2) {\r\n  date1 = new Date(date1);\r\n  if (date1 >= date2) return 1;\r\n  else return -1;\r\n}\r\n","export const GOOGLE_USER_PROFILE_OBJ_KEY = \"GOOGLE_USER_PROFILE_OBJ\";\r\n","import { GOOGLE_USER_PROFILE_OBJ_KEY } from \"../constants/session.constants\";\r\n\r\nexport function getProfileObj() {\r\n  let profileObjString = sessionStorage.getItem(GOOGLE_USER_PROFILE_OBJ_KEY);\r\n  if (profileObjString) return JSON.parse(profileObjString);\r\n  return null;\r\n}\r\n\r\nexport function setProfileObj(profileObj) {\r\n  sessionStorage.setItem(\r\n    GOOGLE_USER_PROFILE_OBJ_KEY,\r\n    JSON.stringify(profileObj)\r\n  );\r\n}\r\n\r\nexport function removeProfileObj() {\r\n  sessionStorage.removeItem(GOOGLE_USER_PROFILE_OBJ_KEY);\r\n}\r\n","import { Grid, IconButton, Paper, Typography } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport \"./../../MiniDrawer.css\";\r\nimport \"./AboutUs.css\";\r\n\r\nexport default class AboutUs extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Typography paragraph>About Us</Typography>\r\n        <Paper style={{ padding: \"15px\" }}>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"flex-start\"\r\n            alignItems=\"center\"\r\n            spacing={3}\r\n          >\r\n            <Grid item>\r\n              <img\r\n                style={{ borderRadius: \"50%\" }}\r\n                src=\"https://lh3.googleusercontent.com/a-/AAuE7mBI4JEaaw4_y19Hz5mbJhDOnn4wmVLknGEsRXM3=s96-c\"\r\n                alt=\"img\"\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"flex-start\"\r\n              >\r\n                <Grid item>\r\n                  <Typography variant=\"h6\">Dharmesh Patel</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"subtitle1\" className=\"details\">\r\n                    The Creator\r\n                    <br />\r\n                    Toronto, CA\r\n                    <br />\r\n                    <a\r\n                      href=\"mailto:95dharmesh@gmail.com\"\r\n                      style={{\r\n                        textDecoration: \"inherit\",\r\n                        color: \"inherit\"\r\n                      }}\r\n                    >\r\n                      95dharmesh@gmail.com\r\n                    </a>\r\n                  </Typography>\r\n                  <IconButton\r\n                    target=\"_blank\"\r\n                    href=\"https://www.linkedin.com/in/95dharmesh/\"\r\n                  >\r\n                    <i className=\"fab fa-linkedin-in details\"></i>\r\n                  </IconButton>\r\n                  <IconButton\r\n                    target=\"_blank\"\r\n                    href=\"https://github.com/dharmesh95\"\r\n                  >\r\n                    <i className=\"fab fa-github icons details\"></i>\r\n                  </IconButton>\r\n                  <IconButton\r\n                    target=\"_blank\"\r\n                    href=\"https://www.facebook.com/ddp95\"\r\n                  >\r\n                    <i className=\"fab fa-facebook details\"></i>\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const findUserByName = (userList, name) => {\r\n  for (let index = 0; index < userList.length; index++) {\r\n    const user = userList[index];\r\n    if (user.name === name) return user;\r\n  }\r\n  return { name };\r\n};\r\n","import MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport match from \"autosuggest-highlight/match\";\r\nimport parse from \"autosuggest-highlight/parse\";\r\nimport deburr from \"lodash/deburr\";\r\nimport React from \"react\";\r\nimport Autosuggest from \"react-autosuggest\";\r\n\r\nfunction renderInputComponent(inputProps) {\r\n  const { classes, inputRef = () => {}, ref, ...other } = inputProps;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputRef: node => {\r\n          ref(node);\r\n          inputRef(node);\r\n        },\r\n        classes: {\r\n          input: classes.input\r\n        }\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\r\n  const matches = match(suggestion.name, query);\r\n  const parts = parse(suggestion.name, matches);\r\n\r\n  return (\r\n    <MenuItem selected={isHighlighted} component=\"div\">\r\n      <div>\r\n        {parts.map(part => (\r\n          <span\r\n            key={part.text}\r\n            style={{ fontWeight: part.highlight ? 500 : 400 }}\r\n          >\r\n            {part.text}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nfunction getSuggestions(suggestions, value) {\r\n  const inputValue = deburr(value.trim()).toLowerCase();\r\n  const inputLength = inputValue.length;\r\n  let count = 0;\r\n\r\n  return inputLength === 0\r\n    ? []\r\n    : suggestions.filter(suggestion => {\r\n        const keep =\r\n          count < 5 &&\r\n          suggestion.name.slice(0, inputLength).toLowerCase() === inputValue;\r\n\r\n        if (keep) {\r\n          count += 1;\r\n        }\r\n\r\n        return keep;\r\n      });\r\n}\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n  return suggestion.name;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  container: {\r\n    position: \"relative\"\r\n  },\r\n  suggestionsContainerOpen: {\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0\r\n  },\r\n  suggestion: {\r\n    display: \"block\"\r\n  },\r\n  suggestionsList: {\r\n    margin: 0,\r\n    padding: 0,\r\n    listStyleType: \"none\"\r\n  },\r\n  divider: {\r\n    height: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nexport default function IntegrationAutosuggest(props) {\r\n  const { label, placeholder, updateUser, userName } = props;\r\n  let { suggestions } = props;\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    single: \"\",\r\n    popper: \"\"\r\n  });\r\n\r\n  const [stateSuggestions, setSuggestions] = React.useState([]);\r\n\r\n  const handleSuggestionsFetchRequested = ({ value }) => {\r\n    setSuggestions(getSuggestions(suggestions, value));\r\n  };\r\n\r\n  const handleSuggestionsClearRequested = () => {\r\n    setSuggestions([]);\r\n  };\r\n\r\n  const handleChange = name => (event, { newValue }) => {\r\n    setState({\r\n      ...state,\r\n      [name]: newValue\r\n    });\r\n    updateUser(userName, newValue);\r\n  };\r\n\r\n  const autosuggestProps = {\r\n    renderInputComponent,\r\n    suggestions: stateSuggestions,\r\n    onSuggestionsFetchRequested: handleSuggestionsFetchRequested,\r\n    onSuggestionsClearRequested: handleSuggestionsClearRequested,\r\n    getSuggestionValue,\r\n    renderSuggestion\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.divider} />\r\n      <Autosuggest\r\n        {...autosuggestProps}\r\n        inputProps={{\r\n          classes,\r\n          id: \"react-autosuggest-simple\",\r\n          label: label,\r\n          placeholder: placeholder,\r\n          value: state.single,\r\n          onChange: handleChange(\"single\")\r\n        }}\r\n        theme={{\r\n          container: classes.container,\r\n          suggestionsContainerOpen: classes.suggestionsContainerOpen,\r\n          suggestionsList: classes.suggestionsList,\r\n          suggestion: classes.suggestion\r\n        }}\r\n        renderSuggestionsContainer={options => (\r\n          <Paper {...options.containerProps} square>\r\n            {options.children}\r\n          </Paper>\r\n        )}\r\n      />\r\n      <div className={classes.divider} />\r\n    </div>\r\n  );\r\n}\r\n","export const checkIfEmpty = obj => {\r\n  if (obj && Object.keys(obj).length) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n","import DateFnsUtils from \"@date-io/date-fns\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider\r\n} from \"@material-ui/pickers\";\r\nimport \"date-fns\";\r\nimport React from \"react\";\r\n\r\nexport default function MaterialUIPickers(props) {\r\n  const { defaultDate, label, updateDate, type } = props;\r\n  // The first commit of Material-UI\r\n  const [selectedDate, setSelectedDate] = React.useState(\r\n    defaultDate || new Date()\r\n  );\r\n\r\n  function handleDateChange(date) {\r\n    setSelectedDate(date);\r\n    updateDate(type, date);\r\n  }\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <Grid container justify=\"space-around\">\r\n        <KeyboardDatePicker\r\n          style={{ width: \"100%\", marginTop: \"0px\" }}\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          label={label}\r\n          format=\"MM/dd/yyyy\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            \"aria-label\": \"change date\"\r\n          }}\r\n        />\r\n      </Grid>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n","export const NEXT_CLASS = \"next\";\r\nexport const OLD_CLASS = \"old\";\r\nexport const UPCOMING_CLASS = \"upcoming\";\r\n","import { Button, Divider, List, ListItem, ListItemAvatar, ListItemText, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { NEXT_CLASS, OLD_CLASS, UPCOMING_CLASS } from \"../../../../constants/styles.constants\";\r\nimport { checkIfEmpty } from \"../../../../helpers/common.helper\";\r\nimport { compareDates } from \"../../../../helpers/date.helper\";\r\nimport \"./list.css\";\r\n\r\nconst LIST_STYLES = {\r\n  0: NEXT_CLASS,\r\n  1: NEXT_CLASS,\r\n  \"-1\": OLD_CLASS\r\n};\r\n\r\n/* accepts date and comapres with current date to return 1, -1 or 0 */\r\nconst compareDateWithToday = date => {\r\n  let today = new Date();\r\n  today.setHours(0, 0, 0, 0);\r\n  return compareDates(date, today);\r\n};\r\n\r\n/* sets styles of all objects in the list based on date */\r\nconst setStyles = list => {\r\n  for (let index = 0; index < list.length; index++) {\r\n    const obj = list[index];\r\n    const val = compareDateWithToday(obj.date);\r\n    obj.className = LIST_STYLES[val];\r\n    if (val !== -1) {\r\n      for (index++; index < list.length; index++) {\r\n        const obj = list[index];\r\n        obj.className = UPCOMING_CLASS;\r\n      }\r\n      return;\r\n    }\r\n  }\r\n};\r\n\r\nexport default function GeneratedList(props) {\r\n  const { header, saveCleaningSchedule, isStyled, reset } = props;\r\n  let { generatedList } = props;\r\n  if (!checkIfEmpty(generatedList) && isStyled) setStyles(generatedList);\r\n  return (\r\n    !checkIfEmpty(generatedList) && (\r\n      <div>\r\n        {header && <Typography className=\"header\">{header}</Typography>}\r\n        <List dense={true}>\r\n          {generatedList.map((obj, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <Divider variant=\"fullWidth\" component=\"li\" />\r\n                <ListItem className={obj.className} alignItems=\"flex-start\">\r\n                  <ListItemAvatar style={{ minWidth: \"44px\" }}>\r\n                    <span>{new Date(obj.date).toLocaleDateString()}</span>\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    className=\"list-item-text\"\r\n                    primary={\r\n                      <React.Fragment>\r\n                        <Typography>{obj.user1.name}</Typography>\r\n                        <Typography>{obj.user2.name}</Typography>\r\n                      </React.Fragment>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n              </div>\r\n            );\r\n          })}\r\n        </List>\r\n        {saveCleaningSchedule && (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              saveCleaningSchedule(generatedList);\r\n              reset();\r\n            }}\r\n          >\r\n            Save\r\n            <i\r\n              style={{ marginLeft: \"10px\" }}\r\n              className=\"fas fa-save\"\r\n              aria-hidden=\"true\"\r\n            ></i>\r\n          </Button>\r\n        )}\r\n        {props.children}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","import { Button, Divider, List, ListItem, ListItemAvatar, ListItemText, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { checkIfEmpty } from \"../../../../helpers/common.helper\";\r\nimport { addDaysToDate } from \"../../../../helpers/date.helper\";\r\nimport MaterialUIPickers from \"../date-picker/MaterialUIPickers\";\r\nimport GeneratedList from \"./GeneratedList\";\r\n\r\nlet generatedList = [];\r\n\r\nconst generateList = (list, firstDate, lastDate) => {\r\n  generatedList = [];\r\n  if (lastDate >= firstDate) {\r\n    let start = firstDate.getDate();\r\n    let end = lastDate.getDate();\r\n    for (let index = 0; index < end - start + 1; index++) {\r\n      generatedList.push({\r\n        date: addDaysToDate(firstDate, index),\r\n        user1: list[index % list.length].user1,\r\n        user2: list[index % list.length].user2\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport default function CleaningList(props) {\r\n  const { list, firstDate, lastDate, updateDate } = props;\r\n  return (\r\n    !checkIfEmpty(list) && (\r\n      <div>\r\n        <Typography style={{ fontSize: \"16px\", marginTop: \"14px\" }}>\r\n          List\r\n        </Typography>\r\n        <List dense={true} style={{ margin: \"-8px -16px\" }}>\r\n          {list.map((obj, index) => (\r\n            <div key={index}>\r\n              <Divider variant=\"fullWidth\" component=\"li\" />\r\n              <ListItem alignItems=\"flex-start\">\r\n                <ListItemAvatar style={{ minWidth: \"44px\" }}>\r\n                  <span>Day {index + 1}</span>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  style={{ paddingLeft: \"10px\" }}\r\n                  primary={\r\n                    <React.Fragment>\r\n                      <Typography>{obj.user1.name}</Typography>\r\n                      <Typography>{obj.user2.name}</Typography>\r\n                    </React.Fragment>\r\n                  }\r\n                />\r\n              </ListItem>\r\n            </div>\r\n          ))}\r\n        </List>\r\n        <MaterialUIPickers\r\n          updateDate={updateDate}\r\n          label=\"From Date\"\r\n          defaultDate={firstDate}\r\n          type=\"firstDate\"\r\n        />\r\n        <MaterialUIPickers\r\n          type=\"lastDate\"\r\n          label=\"To Date\"\r\n          updateDate={updateDate}\r\n          defaultDate={lastDate}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => generateList(list, firstDate, lastDate)}\r\n        >\r\n          Generate\r\n          <i\r\n            style={{ marginLeft: \"10px\" }}\r\n            className=\"fas fa-tools\"\r\n            aria-hidden=\"true\"\r\n          ></i>\r\n        </Button>\r\n        <GeneratedList\r\n          header=\"Generated List\"\r\n          generatedList={generatedList}\r\n          {...props}\r\n        />\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","import { Button, ExpansionPanel, ExpansionPanelSummary, Typography } from \"@material-ui/core\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getData, postData } from \"../../../actions/action\";\r\nimport { continuousCall } from \"../../../constants/time.constants\";\r\nimport { DEFAULT, FETCH_APPROVED_USERS } from \"../../../constants/types.constants\";\r\nimport { createUrl, DELETE_CLEANING_SCHEDULE_URL, GET_APPROVED_USERS_URL, SAVE_CLEANING_SCHEDULE_URL } from \"../../../constants/url.constants\";\r\nimport { getFirstDayofTheMonth, getLastDayofTheMonth } from \"../../../helpers/date.helper\";\r\nimport { findUserByName } from \"../../../helpers/user.helper\";\r\nimport IntegrationAutosuggest from \"./auto-suggest/IntegrationAutosuggest\";\r\nimport CleaningList from \"./list/CleaningList\";\r\n\r\nclass CleaningAdmin extends Component {\r\n\r\n  INITIAL_STATE = {\r\n    list: [],\r\n    userName1: \"\",\r\n    userName2: \"\",\r\n    firstDate: getFirstDayofTheMonth(),\r\n    lastDate: getLastDayofTheMonth()\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.INITIAL_STATE;\r\n    this.updateUser = this.updateUser.bind(this);\r\n    this.updateDate = this.updateDate.bind(this);\r\n    this.reset = this.reset.bind(this);\r\n  }\r\n\r\n  reset() {\r\n    this.setState(this.INITIAL_STATE);\r\n  }\r\n\r\n  addToList() {\r\n    const { userName1, userName2 } = this.state;\r\n    let { list } = this.state;\r\n    const { approvedUsers } = this.props;\r\n    if (userName1) {\r\n      const user1 = findUserByName(approvedUsers, userName1);\r\n      const user2 = findUserByName(approvedUsers, userName2);\r\n      list.push({ user1, user2 });\r\n      this.setState({ ...this.state, list });\r\n    }\r\n  }\r\n\r\n  updateUser(userName, value) {\r\n    this.setState({ ...this.state, [userName]: value });\r\n  }\r\n\r\n  updateDate(date, value) {\r\n    this.setState({ ...this.state, [date]: value });\r\n  }\r\n\r\n  fetchAllCleaningData(props) {\r\n    const { fetchApprovedUsers } = props;\r\n    fetchApprovedUsers();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.cleaningInterval = continuousCall(\r\n      this.fetchAllCleaningData,\r\n      this.props\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { list, userName1, userName2, firstDate, lastDate } = this.state;\r\n    const { approvedUsers, classes, deleteSchedule } = this.props;\r\n    return (\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography className={classes.heading}>Cleaning</Typography>\r\n        </ExpansionPanelSummary>\r\n        <div style={{ padding: \"8px 16px\" }}>\r\n          <Button\r\n            onClick={() => deleteSchedule()}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Delete\r\n            <i\r\n              style={{ color: \"white\", paddingLeft: \"10px\" }}\r\n              className=\"fas fa-trash-alt vote-icon\"\r\n            ></i>\r\n          </Button>\r\n          <IntegrationAutosuggest\r\n            suggestions={approvedUsers}\r\n            label=\"User 1\"\r\n            placeholder=\"Search a User\"\r\n            updateUser={this.updateUser}\r\n            userName=\"userName1\"\r\n          />\r\n          <IntegrationAutosuggest\r\n            suggestions={approvedUsers}\r\n            label=\"User 2\"\r\n            placeholder=\"Search a User\"\r\n            updateUser={this.updateUser}\r\n            userName=\"userName2\"\r\n          />\r\n          <Fab\r\n            style={{ marginTop: \"14px\" }}\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            aria-label=\"add\"\r\n          >\r\n            <AddIcon onClick={() => this.addToList()} />\r\n          </Fab>\r\n          <CleaningList\r\n            reset={this.reset}\r\n            list={list}\r\n            firstDate={firstDate}\r\n            lastDate={lastDate}\r\n            updateDate={this.updateDate}\r\n            userName1={userName1}\r\n            userName2={userName2}\r\n            {...this.props}\r\n          />\r\n        </div>\r\n      </ExpansionPanel>\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.cleaningInterval);\r\n  }\r\n}\r\n\r\nCleaningAdmin.propTypes = {};\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  return {\r\n    approvedUsers: state.adminReducer.approvedUsers\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    fetchApprovedUsers: () =>\r\n      dispatch(\r\n        getData(createUrl(GET_APPROVED_USERS_URL), FETCH_APPROVED_USERS)\r\n      ),\r\n    saveCleaningSchedule: schedule =>\r\n      dispatch(postData(createUrl(SAVE_CLEANING_SCHEDULE_URL), schedule)),\r\n    deleteSchedule: () =>\r\n      dispatch(getData(createUrl(DELETE_CLEANING_SCHEDULE_URL), DEFAULT))\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CleaningAdmin);\r\n","import { Divider, ListItem, ListItemAvatar } from \"@material-ui/core\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport React, { Component } from \"react\";\r\nimport { checkIfEmpty } from \"../../../helpers/common.helper\";\r\nimport CircularIndeterminate from \"../../common/CircularIndeterminate\";\r\n\r\nexport default class FeedbackAdmin extends Component {\r\n  render() {\r\n    const { classes, feedback } = this.props;\r\n    return (\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography className={classes.heading}>Feedback</Typography>\r\n        </ExpansionPanelSummary>\r\n        {!checkIfEmpty(feedback) ? (\r\n          <div>\r\n            <List dense={true}>\r\n              {feedback.map((obj, index) => (\r\n                <div key={obj.id}>\r\n                  <Divider variant=\"fullWidth\" component=\"li\" />\r\n                  <ListItem alignItems=\"flex-start\">\r\n                    <ListItemAvatar style={{ minWidth: \"44px\" }}>\r\n                      <img\r\n                        style={{ borderRadius: \"50%\", height: \"30px\" }}\r\n                        src={checkIfEmpty(obj.user) ? null : obj.user.imageUrl}\r\n                        alt=\"img\"\r\n                      ></img>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={\r\n                        <React.Fragment>\r\n                          <Typography>\r\n                            {checkIfEmpty(obj.user) ? null : obj.user.name}\r\n                          </Typography>\r\n                          <Typography\r\n                            className=\"role\"\r\n                          >\r\n                            {new Date(obj.date).toLocaleDateString() +\r\n                              \" \" +\r\n                              new Date(obj.date).toLocaleTimeString()}\r\n                          </Typography>\r\n                          <Typography>{obj.feedback}</Typography>\r\n                        </React.Fragment>\r\n                      }\r\n                    />\r\n                  </ListItem>\r\n                </div>\r\n              ))}\r\n            </List>\r\n          </div>\r\n        ) : (\r\n          <CircularIndeterminate />\r\n        )}\r\n      </ExpansionPanel>\r\n    );\r\n  }\r\n}\r\n","export const SUPER_ADMIN_USER = \"S\";\r\nexport const ADMIN_USER = \"A\";\r\nexport const NORMAL_USER = \"N\";\r\nexport const REJECTED_USER = \"R\";\r\nexport const UNKNOWN_USER = \"U\";\r\n\r\nexport const NOT_ENOUGH_PERMISSION = \"You don't have enough permissions!\";\r\nexport const REQUEST_SENT_TO_ADMIN = \"Your request has been sent to Admin\";\r\nexport const REQUEST_REJECTED = \"Your request was rejected by the Admin\";\r\n\r\nexport const UNKNOWN_MESSAGE = \"Unknown Error Occured\";\r\n\r\nexport const ROLES = {\r\n  [SUPER_ADMIN_USER]: { desc: \"Super Admin\" },\r\n  [ADMIN_USER]: { desc: \"Admin\" },\r\n  [NORMAL_USER]: { desc: \"Normal\", message: NOT_ENOUGH_PERMISSION },\r\n  [REJECTED_USER]: { desc: \"Rejected\", message: REQUEST_REJECTED },\r\n  [UNKNOWN_USER]: { desc: \"Unknown\", message: NOT_ENOUGH_PERMISSION }\r\n};\r\n\r\nexport const ACCESS_FOOD_KEY = \"food\";\r\nexport const ACCESS_GROCERY_KEY = \"grocery\";\r\nexport const ACCESS_CLEANING_KEY = \"cleaning\";\r\nexport const ACCESS_SCHEDULE_KEY = \"schedule\";\r\n\r\nexport const USER_NAME_MAPPING = {\r\n  userName1: \"user1\",\r\n  userName2: \"user2\"\r\n};\r\n","import { Divider, ListItem, ListItemAvatar } from \"@material-ui/core\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport React, { Component } from \"react\";\r\nimport { NORMAL_USER, REJECTED_USER } from \"../../../constants/user.constants\";\r\nimport { checkIfEmpty } from \"../../../helpers/common.helper\";\r\nimport \"./Requests.css\";\r\n\r\nexport default class Requests extends Component {\r\n  render() {\r\n    const { classes, requests, updateUserRequest } = this.props;\r\n    return (\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography className={classes.heading}>Requests</Typography>\r\n        </ExpansionPanelSummary>\r\n        {!checkIfEmpty(requests) ? (\r\n          <div>\r\n            <List dense={true}>\r\n              {requests.map((request, index) => (\r\n                <div key={request.id}>\r\n                  <Divider variant=\"fullWidth\" component=\"li\" />\r\n                  <ListItem alignItems=\"flex-start\">\r\n                    <ListItemAvatar style={{ minWidth: \"44px\" }}>\r\n                      <img\r\n                        style={{ borderRadius: \"50%\", height: \"30px\" }}\r\n                        src={request.imageUrl}\r\n                        alt=\"img\"\r\n                      ></img>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={\r\n                        <React.Fragment>\r\n                          <Typography>{request.name}</Typography>\r\n                          <IconButton\r\n                            className=\"request-icons\"\r\n                            onClick={() =>\r\n                              updateUserRequest(request, NORMAL_USER, index)\r\n                            }\r\n                          >\r\n                            <i className=\"fas fa-check\"></i>\r\n                          </IconButton>\r\n                          <IconButton\r\n                            className=\"request-icons\"\r\n                            onClick={() =>\r\n                              updateUserRequest(request, REJECTED_USER, index)\r\n                            }\r\n                          >\r\n                            <i className=\"fas fa-times\"></i>\r\n                          </IconButton>\r\n                        </React.Fragment>\r\n                      }\r\n                    />\r\n                  </ListItem>\r\n                </div>\r\n              ))}\r\n            </List>\r\n          </div>\r\n        ) : (\r\n          <div className=\"no-req\">No new requests</div>\r\n        )}\r\n      </ExpansionPanel>\r\n    );\r\n  }\r\n}\r\n","import { ADMIN_USER, SUPER_ADMIN_USER } from \"../constants/user.constants\";\r\nimport { checkIfEmpty } from \"./common.helper\";\r\n\r\nexport const isSuperAdmin = profileObj => {\r\n  let roles = [SUPER_ADMIN_USER];\r\n  return !checkIfEmpty(profileObj) ? roles.includes(profileObj.role) : false;\r\n};\r\n\r\nexport const isAdmin = profileObj => {\r\n  let roles = [SUPER_ADMIN_USER, ADMIN_USER];\r\n  return !checkIfEmpty(profileObj) ? roles.includes(profileObj.role) : false;\r\n};\r\n\r\nexport const isPopularVisibile = profileObj => {\r\n  return true; // TODO remove it in future\r\n  /* let roles = [SUPER_ADMIN_USER, ADMIN_USER];\r\n  return roles.includes(profileObj.role); */\r\n};\r\n\r\nexport const isAdminVisibile = profileObj => {\r\n  return isAdmin(profileObj);\r\n};\r\n\r\nexport const isAccessible = (profileObj, key) => {\r\n  return !checkIfEmpty(profileObj) && !checkIfEmpty(profileObj.access)\r\n    ? profileObj.access[key]\r\n    : false;\r\n};\r\n","import React from \"react\";\r\n\r\nexport function FoodIcon(props) {\r\n  return (\r\n    <i style={{ color: props.color }} className=\"fas fa-utensils icons\"></i>\r\n  );\r\n}\r\n\r\nexport function GroceryIcon(props) {\r\n  return (\r\n    <i\r\n      style={{ color: props.color }}\r\n      className=\"fas fa-shopping-basket icons\"\r\n    ></i>\r\n  );\r\n}\r\n\r\nexport function CleaningIcon(props) {\r\n  return <i style={{ color: props.color }} className=\"fas fa-broom icons\"></i>;\r\n}\r\n\r\nexport function ScheduleIcon(props) {\r\n  return (\r\n    <i style={{ color: props.color }} className=\"fas fa-calendar-alt icons\"></i>\r\n  );\r\n}\r\n\r\nexport function AdminIcon(props) {\r\n  return (\r\n    <i style={{ color: props.color }} className=\"fas fa-user-cog icons\"></i>\r\n  );\r\n}\r\n\r\nexport function FeedbackIcon(props) {\r\n  return (\r\n    <i style={{ color: props.color }} className=\"fas fa-comments icons\"></i>\r\n  );\r\n}\r\n\r\nexport function AboutUsIcon(props) {\r\n  return (\r\n    <i style={{ color: props.color }} className=\"fas fa-address-card icons\"></i>\r\n  );\r\n}\r\n","import { Button, Divider, Grid, IconButton, ListItem, ListItemAvatar } from \"@material-ui/core\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Component, default as React } from \"react\";\r\nimport { ACCESS_CLEANING_KEY, ACCESS_FOOD_KEY, ACCESS_GROCERY_KEY, ACCESS_SCHEDULE_KEY, ADMIN_USER, NORMAL_USER, ROLES } from \"../../../constants/user.constants\";\r\nimport { checkIfEmpty } from \"../../../helpers/common.helper\";\r\nimport { isAdmin, isSuperAdmin } from \"../../../helpers/visibility.helper\";\r\nimport CircularIndeterminate from \"../../common/CircularIndeterminate\";\r\nimport { CleaningIcon, FoodIcon, GroceryIcon, ScheduleIcon } from \"../../common/Icons\";\r\nimport \"./Users.css\";\r\n\r\nexport default class Users extends Component {\r\n  render() {\r\n    const {\r\n      classes,\r\n      approvedUsers,\r\n      deleteUser,\r\n      updateAccess,\r\n      updateAdmin,\r\n      profileObj\r\n    } = this.props;\r\n    return (\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography className={classes.heading}>Users</Typography>\r\n        </ExpansionPanelSummary>\r\n        {!checkIfEmpty(approvedUsers) ? (\r\n          <div>\r\n            <List dense={true}>\r\n              {approvedUsers.map((user, index) => (\r\n                <div key={user.id}>\r\n                  <Divider variant=\"fullWidth\" component=\"li\" />\r\n                  <ListItem alignItems=\"flex-start\">\r\n                    <ListItemAvatar style={{ minWidth: \"44px\" }}>\r\n                      <img\r\n                        style={{ borderRadius: \"50%\", height: \"30px\" }}\r\n                        src={user.imageUrl}\r\n                        alt=\"img\"\r\n                      ></img>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={\r\n                        <React.Fragment>\r\n                          <Typography>{user.name}</Typography>\r\n                          <Typography className=\"role\">\r\n                            {ROLES[user.role].desc}\r\n                          </Typography>\r\n                          <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"flex-start\"\r\n                            alignItems=\"center\"\r\n                          >\r\n                            <Grid item>\r\n                              <IconButton className=\"user-icons\" onClick={() => updateAccess(user, ACCESS_FOOD_KEY, index) } >\r\n                                <FoodIcon color={ user.access ? (user.access.food ? \"green\" : \"grey\") : \"grey\" } />\r\n                              </IconButton>\r\n                              <IconButton className=\"user-icons\" onClick={() => updateAccess(user, ACCESS_GROCERY_KEY, index) } >\r\n                                <GroceryIcon color={ user.access ? (user.access.grocery ? \"green\" : \"grey\") : \"grey\" } />\r\n                              </IconButton>\r\n                              <IconButton className=\"user-icons\" onClick={() => updateAccess(user, ACCESS_CLEANING_KEY, index) } >\r\n                                <CleaningIcon color={ user.access ? (user.access.cleaning ? \"green\" : \"grey\") : \"grey\" } />\r\n                              </IconButton>\r\n                              <IconButton className=\"user-icons\" onClick={() => updateAccess(user, ACCESS_SCHEDULE_KEY, index) } >\r\n                                <ScheduleIcon color={ user.access ? (user.access.schedule ? \"green\" : \"grey\") : \"grey\" } />\r\n                              </IconButton>\r\n                              <br />\r\n                              {isAdmin(profileObj) ? (\r\n                                <div>\r\n                                  <Button\r\n                                    size=\"small\"\r\n                                    variant=\"contained\"\r\n                                    disabled={isAdmin(user)}\r\n                                    className={classes.button}\r\n                                    onClick={() =>\r\n                                      updateAdmin(user, ADMIN_USER, index)\r\n                                    }\r\n                                  >\r\n                                    <span style={{ fontSize: \"11px\" }}>\r\n                                      Make Admin\r\n                                    </span>\r\n                                  </Button>\r\n                                  <Button\r\n                                    size=\"small\"\r\n                                    variant=\"contained\"\r\n                                    disabled={\r\n                                      !isAdmin(user) || isSuperAdmin(user)\r\n                                    }\r\n                                    className={classes.button}\r\n                                    onClick={() =>\r\n                                      updateAdmin(user, NORMAL_USER, index)\r\n                                    }\r\n                                  >\r\n                                    <span style={{ fontSize: \"11px\" }}>\r\n                                      Remove Admin\r\n                                    </span>\r\n                                  </Button>\r\n                                </div>\r\n                              ) : (\r\n                                <br />\r\n                              )}\r\n                              <Button\r\n                                size=\"small\"\r\n                                variant=\"contained\"\r\n                                disabled={isAdmin(user)}\r\n                                className={classes.button}\r\n                                onClick={() => deleteUser(user, index)}\r\n                              >\r\n                                <span style={{ fontSize: \"11px\" }}>\r\n                                  Delete User\r\n                                </span>\r\n                              </Button>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </React.Fragment>\r\n                      }\r\n                    />\r\n                  </ListItem>\r\n                </div>\r\n              ))}\r\n            </List>\r\n          </div>\r\n        ) : (\r\n          <CircularIndeterminate />\r\n        )}\r\n      </ExpansionPanel>\r\n    );\r\n  }\r\n}\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport CleaningAdmin from \"./cleaning/CleaningAdmin\";\r\nimport FeedbackAdmin from \"./feedback/FeedbackAdmin\";\r\nimport Requests from \"./requests/Requests\";\r\nimport Users from \"./users/Users\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"100%\",\r\n    marginTop: \"5px\"\r\n  },\r\n  dense: {\r\n    marginTop: 19\r\n  },\r\n  menu: {\r\n    width: 200\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1)\r\n  },\r\n  button: {\r\n    marginBottom: \"10px\",\r\n    marginRight: \"10px\"\r\n  }\r\n}));\r\n\r\nexport default function AdminExpansionPanel(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Requests classes={classes} {...props} />\r\n      <Users classes={classes} {...props} />\r\n      {/* <ExpansionPanelWrapper classes={classes} header=\"Grocery\">\r\n        <GroceryAdmin classes={classes} {...props} />\r\n      </ExpansionPanelWrapper> */}\r\n      <CleaningAdmin classes={classes} {...props} />\r\n      <FeedbackAdmin classes={classes} {...props} />\r\n    </div>\r\n  );\r\n}\r\n","import { Typography } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getData, postData } from \"../../actions/action\";\r\nimport { continuousCall } from \"../../constants/time.constants\";\r\nimport { FETCH_ALL_REQUESTS, FETCH_APPROVED_USERS, FETCH_FEEDBACK } from \"../../constants/types.constants\";\r\nimport { createUrl, DELETE_USER_URL, GET_ALL_REQUESTS_URL, GET_APPROVED_USERS_URL, GET_FEEDBACK_URL, UPDATE_USER_ROLE_URL, UPDATE_USER_URL } from \"../../constants/url.constants\";\r\nimport AdminExpansionPanel from \"./AdminExpansionPanel\";\r\n\r\nclass Admin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateUserRequest = this.updateUserRequest.bind(this);\r\n    this.updateAdmin = this.updateAdmin.bind(this);\r\n    this.updateAccess = this.updateAccess.bind(this);\r\n    this.deleteUser = this.deleteUser.bind(this);\r\n    this.state = {\r\n      requests: [],\r\n      approvedUsers: []\r\n    };\r\n  }\r\n\r\n  updateUserRequest(userObj, role, index) {\r\n    const { requests } = this.state;\r\n    const { updateUserRole } = this.props;\r\n    userObj.role = role;\r\n    updateUserRole(userObj);\r\n    delete requests[index];\r\n    this.setState({ requests });\r\n  }\r\n\r\n  updateAdmin(userObj, role, index) {\r\n    const { approvedUsers } = this.state;\r\n    const { updateUserRole } = this.props;\r\n    userObj.role = role;\r\n    updateUserRole(userObj);\r\n    approvedUsers[index] = userObj;\r\n    this.setState({ approvedUsers });\r\n  }\r\n\r\n  updateAccess(userObj, type, index) {\r\n    const { approvedUsers } = this.state;\r\n    const { updateUser } = this.props;\r\n    userObj.access[type] = !userObj.access[type];\r\n    updateUser(userObj);\r\n    approvedUsers[index] = userObj;\r\n    this.setState({ approvedUsers });\r\n  }\r\n\r\n  deleteUser(userObj, index) {\r\n    const { approvedUsers } = this.state;\r\n    const { deleteUser } = this.props;\r\n    deleteUser(userObj);\r\n    delete approvedUsers[index];\r\n    this.setState({ approvedUsers });\r\n  }\r\n\r\n  fetchAllAdminData(props) {\r\n    const { fetchRequests, fetchApprovedUsers, fetchFeedback } = props;\r\n    fetchRequests();\r\n    fetchApprovedUsers();\r\n    fetchFeedback();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.adminInterval = continuousCall(this.fetchAllAdminData, this.props);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { requests, approvedUsers } = this.props;\r\n    if (requests !== prevProps.requests) {\r\n      this.setState({ requests });\r\n    }\r\n    if (approvedUsers !== prevProps.approvedUsers) {\r\n      this.setState({ approvedUsers });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { requests, approvedUsers } = this.state;\r\n    return (\r\n      <div>\r\n        <Typography paragraph>Admin</Typography>\r\n        <AdminExpansionPanel\r\n          {...this.props}\r\n          requests={requests}\r\n          approvedUsers={approvedUsers}\r\n          updateUserRequest={this.updateUserRequest}\r\n          updateAdmin={this.updateAdmin}\r\n          updateAccess={this.updateAccess}\r\n          deleteUser={this.deleteUser}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.adminInterval);\r\n  }\r\n}\r\n\r\nAdmin.propTypes = {};\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  return {\r\n    requests: state.adminReducer.requests,\r\n    feedback: state.adminReducer.feedback,\r\n    approvedUsers: state.adminReducer.approvedUsers\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    fetchRequests: () =>\r\n      dispatch(getData(createUrl(GET_ALL_REQUESTS_URL), FETCH_ALL_REQUESTS)),\r\n    fetchFeedback: () =>\r\n      dispatch(getData(createUrl(GET_FEEDBACK_URL), FETCH_FEEDBACK)),\r\n    updateUserRole: user =>\r\n      dispatch(postData(createUrl(UPDATE_USER_ROLE_URL), user)),\r\n    updateUser: user => dispatch(postData(createUrl(UPDATE_USER_URL), user)),\r\n    fetchApprovedUsers: () =>\r\n      dispatch(\r\n        getData(createUrl(GET_APPROVED_USERS_URL), FETCH_APPROVED_USERS)\r\n      ),\r\n    deleteUser: user => dispatch(postData(createUrl(DELETE_USER_URL), user))\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Admin);\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class CheckIcon extends Component {\r\n  render() {\r\n    return (\r\n      <svg\r\n        className={this.props.className}\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 512 512\"\r\n      >\r\n        <path d=\"M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z\" />\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class TimesIcon extends Component {\r\n  render() {\r\n    return (\r\n      <svg\r\n        className={this.props.className}\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 512 512\"\r\n      >\r\n        <path d=\"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\" />\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n","import { Typography } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport CheckIcon from \"../../../../logos/CheckIcon\";\r\nimport TimesIcon from \"../../../../logos/TimesIcon\";\r\nimport IntegrationAutosuggest from \"../auto-suggest/IntegrationAutosuggest\";\r\nimport \"./../../../cleaning/cleaning.css\";\r\n\r\nexport default class EditableUserInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.name = props.user.name;\r\n    this.state = { editUserName: false };\r\n    this.toggleEdit = this.toggleEdit.bind(this);\r\n    this.save = this.save.bind(this);\r\n  }\r\n\r\n  save(cleaningObj, userName) {\r\n    this.name = this.props.value;\r\n    this.props.save(cleaningObj, userName);\r\n  }\r\n\r\n  toggleEdit() {\r\n    this.setState({ ...this.state, editUserName: !this.state.editUserName });\r\n  }\r\n\r\n  render() {\r\n    const { cleaningObj, suggestions, userName, placeholder, updateUser } = this.props;\r\n    const { editUserName } = this.state;\r\n    return (\r\n      <div>\r\n        {!editUserName && (\r\n          <Typography onClick={() => this.toggleEdit()}>{this.name}</Typography>\r\n        )}\r\n        {editUserName && (\r\n          <div>\r\n            <IntegrationAutosuggest\r\n              suggestions={suggestions}\r\n              placeholder={placeholder}\r\n              updateUser={updateUser}\r\n              userName={userName}\r\n            />\r\n            <span\r\n              onClick={() => {\r\n                this.save(cleaningObj, userName);\r\n                this.toggleEdit();\r\n              }}\r\n            >\r\n              <CheckIcon className=\"check-logo\" />\r\n            </span>\r\n            <span onClick={() => this.toggleEdit()}>\r\n              <TimesIcon className=\"times-logo\" />\r\n            </span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Divider, List, ListItem, ListItemAvatar, ListItemText, Typography } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport { USER_NAME_MAPPING } from \"../../../../constants/user.constants\";\r\nimport { checkIfEmpty } from \"../../../../helpers/common.helper\";\r\nimport { findUserByName } from \"../../../../helpers/user.helper\";\r\nimport EditableUserInput from \"./EditableUserInput\";\r\nimport \"./list.css\";\r\n\r\nexport default class EditableList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userName1: \"\",\r\n      userName2: \"\"\r\n    };\r\n    this.updateUser = this.updateUser.bind(this);\r\n    this.save = this.save.bind(this);\r\n  }\r\n\r\n  updateUser(userName, value) {\r\n    this.setState({ ...this.state, [userName]: value });\r\n  }\r\n\r\n  save(cleaningObj, key) {\r\n    const userName = this.state[key];\r\n    const updatedUser = findUserByName(this.props.approvedUsers, userName);\r\n    cleaningObj[USER_NAME_MAPPING[key]] = updatedUser;\r\n    this.props.updateSchedule(cleaningObj);\r\n  }\r\n\r\n  render() {\r\n    const { userName1, userName2 } = this.state;\r\n    const { header, approvedUsers, placeholder, generatedList } = this.props;\r\n    return (\r\n      !checkIfEmpty(generatedList) && (\r\n        <div>\r\n          {header && <Typography className=\"header\">{header}</Typography>}\r\n          <List dense={true}>\r\n            {generatedList.map(cleaningObj => {\r\n              return (\r\n                <div key={cleaningObj.id}>\r\n                  <Divider variant=\"fullWidth\" component=\"li\" />\r\n                  <ListItem className={cleaningObj.className} alignItems=\"flex-start\">\r\n                    <ListItemAvatar style={{ minWidth: \"44px\" }}>\r\n                      <span>{new Date(cleaningObj.date).toLocaleDateString()}</span>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      className=\"list-item-text\"\r\n                      primary={\r\n                        <React.Fragment>\r\n                          <EditableUserInput\r\n                            cleaningObj={cleaningObj}\r\n                            user={cleaningObj.user1}\r\n                            suggestions={approvedUsers}\r\n                            placeholder={placeholder}\r\n                            updateUser={this.updateUser}\r\n                            userName=\"userName1\"\r\n                            value={userName1}\r\n                            save={this.save}\r\n                          />\r\n                          <EditableUserInput\r\n                            cleaningObj={cleaningObj}\r\n                            user={cleaningObj.user2}\r\n                            suggestions={approvedUsers}\r\n                            placeholder={placeholder}\r\n                            updateUser={this.updateUser}\r\n                            userName=\"userName2\"\r\n                            value={userName2}\r\n                            save={this.save}\r\n                          />\r\n                        </React.Fragment>\r\n                      }\r\n                    />\r\n                  </ListItem>\r\n                </div>\r\n              );\r\n            })}\r\n          </List>\r\n        </div>\r\n      )\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class BellIcon extends Component {\r\n  render() {\r\n    return (\r\n      <svg\r\n        className={this.props.className}\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 448 512\"\r\n      >\r\n        <path d=\"M224 512c35.32 0 63.97-28.65 63.97-64H160.03c0 35.35 28.65 64 63.97 64zm215.39-149.71c-19.32-20.76-55.47-51.99-55.47-154.29 0-77.7-54.48-139.9-127.94-155.16V32c0-17.67-14.32-32-31.98-32s-31.98 14.33-31.98 32v20.84C118.56 68.1 64.08 130.3 64.08 208c0 102.3-36.15 133.53-55.47 154.29-6 6.45-8.66 14.16-8.61 21.71.11 16.4 12.98 32 32.1 32h383.8c19.12 0 32-15.6 32.1-32 .05-7.55-2.61-15.27-8.61-21.71z\" />\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n","import { Button, Divider, List, ListItem, ListItemAvatar, ListItemText, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { NEXT_CLASS, OLD_CLASS, UPCOMING_CLASS } from \"../../../../constants/styles.constants\";\r\nimport { checkIfEmpty } from \"../../../../helpers/common.helper\";\r\nimport { compareDates } from \"../../../../helpers/date.helper\";\r\nimport BellIcon from \"../../../../logos/BellIcon\";\r\nimport \"./list.css\";\r\n\r\nconst LIST_STYLES = {\r\n  0: NEXT_CLASS,\r\n  1: NEXT_CLASS,\r\n  \"-1\": OLD_CLASS\r\n};\r\n\r\n/* accepts date and comapres with current date to return 1, -1 or 0 */\r\nconst compareDateWithToday = date => {\r\n  let today = new Date();\r\n  today.setHours(0, 0, 0, 0);\r\n  return compareDates(date, today);\r\n};\r\n\r\n/* sets styles of all objects in the list based on date */\r\nconst setStyles = list => {\r\n  for (let index = 0; index < list.length; index++) {\r\n    const obj = list[index];\r\n    const val = compareDateWithToday(obj.date);\r\n    obj.className = LIST_STYLES[val];\r\n    if (val !== -1) {\r\n      for (index++; index < list.length; index++) {\r\n        const obj = list[index];\r\n        obj.className = UPCOMING_CLASS;\r\n      }\r\n      return;\r\n    }\r\n  }\r\n};\r\n\r\nexport default function UserCleaningList(props) {\r\n  const { header, isStyled, sendEventInvites, profileObj } = props;\r\n  let { generatedList } = props;\r\n  if (!checkIfEmpty(generatedList) && isStyled) setStyles(generatedList);\r\n  return (\r\n    !checkIfEmpty(generatedList) && (\r\n      <div>\r\n        {header && <Typography className=\"header\">{header}</Typography>}\r\n        <List dense={true}>\r\n          {generatedList.map((obj, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <Divider variant=\"fullWidth\" component=\"li\" />\r\n                <ListItem className={obj.className} alignItems=\"flex-start\">\r\n                  <ListItemAvatar style={{ minWidth: \"44px\" }}>\r\n                    <span>{new Date(obj.date).toLocaleDateString()}</span>\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    className=\"list-item-text\"\r\n                    primary={\r\n                      <React.Fragment>\r\n                        <Typography>{obj.user1.name}</Typography>\r\n                        <Typography>{obj.user2.name}</Typography>\r\n                      </React.Fragment>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n              </div>\r\n            );\r\n          })}\r\n        </List>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\"notify-button-padding\"\r\n          onClick={() => sendEventInvites(profileObj.email)}\r\n        >\r\n          <span>\r\n            Notify\r\n            <BellIcon className=\"bell-icon\" />\r\n          </span>\r\n        </Button>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","import Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport { ROLES, UNKNOWN_MESSAGE } from \"../../constants/user.constants\";\r\nimport \"../food/Food.css\";\r\n\r\nexport default function PermissionDenied(props) {\r\n  const { profileObj } = props;\r\n\r\n  return (\r\n    <Typography\r\n      variant=\"caption\"\r\n      className=\"details-header\"\r\n      style={{ paddingLeft: \"24px\" }}\r\n    >\r\n      {ROLES[profileObj.role]\r\n        ? ROLES[profileObj.role].message\r\n        : UNKNOWN_MESSAGE}\r\n    </Typography>\r\n  );\r\n}\r\n","import ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"100%\",\r\n    marginTop: \"5px\"\r\n  },\r\n  dense: {\r\n    marginTop: 19\r\n  },\r\n  menu: {\r\n    width: 200\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nexport default function SimpleExpansionPanel(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      {React.Children.map(props.children, child => (\r\n        <ExpansionPanel>\r\n          <ExpansionPanelSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls=\"panel1a-content\"\r\n            id=\"panel1a-header\"\r\n          >\r\n            <Typography className={classes.heading}>\r\n              {child.props.panelHeader}\r\n            </Typography>\r\n          </ExpansionPanelSummary>\r\n          <ExpansionPanelDetails className={child.props.panelClassName} style={{ display: \"block\" }}>\r\n            {React.cloneElement(child, { classes, ...props })}\r\n          </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import { Typography } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getData, postData } from \"../../actions/action\";\r\nimport { FETCH_APPROVED_USERS, FETCH_CLEANING_SCHEDULE_FOR_USER, FETCH_FULL_CLEANING_SCHEDULE } from \"../../constants/types.constants\";\r\nimport { createUrl, GET_APPROVED_USERS_URL, GET_FULL_SCHEDULE_URL, GET_SCHEDULE_BY_USER_ID_URL, SEND_EVENT_INVITES_URL, UPDATE_SCHEDULE_URL } from \"../../constants/url.constants\";\r\nimport { ACCESS_CLEANING_KEY } from \"../../constants/user.constants\";\r\nimport { isAccessible } from \"../../helpers/visibility.helper\";\r\nimport EditableList from \"../admin/cleaning/list/EditableList\";\r\nimport UserCleaningList from \"../admin/cleaning/list/UserCleaningList\";\r\nimport PermissionDenied from \"../common/PermissionDenied\";\r\nimport SimpleExpansionPanel from \"../food/SimpleExpansionPanel\";\r\n\r\nclass Cleaning extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchSchedule(this.props.profileObj.id);\r\n    this.props.fetchFullSchedule();\r\n    this.props.fetchApprovedUsers();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      profileObj,\r\n      userCleaningSchedule,\r\n      fullCleaningSchedule,\r\n      approvedUsers\r\n    } = this.props;\r\n    return isAccessible(profileObj, ACCESS_CLEANING_KEY) ? (\r\n      <div>\r\n        <Typography paragraph>Cleaning</Typography>\r\n        <SimpleExpansionPanel {...this.props}>\r\n          <UserCleaningList\r\n            isStyled={true}\r\n            panelClassName=\"no-padding-expansion-panel\"\r\n            panelHeader=\"Your Schedule\"\r\n            generatedList={userCleaningSchedule}\r\n            {...this.props}\r\n          />\r\n          <EditableList\r\n            approvedUsers={approvedUsers}\r\n            panelClassName=\"no-padding-expansion-panel\"\r\n            panelHeader=\"Full Schedule\"\r\n            generatedList={fullCleaningSchedule}\r\n            isEditable={true}\r\n            placeholder=\"Search a User\"\r\n          />\r\n        </SimpleExpansionPanel>\r\n      </div>\r\n    ) : (\r\n      <PermissionDenied profileObj={profileObj} />\r\n    );\r\n  }\r\n}\r\n\r\nCleaning.propTypes = {};\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  return {\r\n    approvedUsers: state.adminReducer.approvedUsers,\r\n    userCleaningSchedule: state.cleaningReducer.userCleaningSchedule,\r\n    fullCleaningSchedule: state.cleaningReducer.fullCleaningSchedule\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    fetchApprovedUsers: () =>\r\n      dispatch(\r\n        getData(createUrl(GET_APPROVED_USERS_URL), FETCH_APPROVED_USERS)\r\n      ),\r\n    fetchSchedule: userId =>\r\n      dispatch(\r\n        postData(\r\n          createUrl(GET_SCHEDULE_BY_USER_ID_URL),\r\n          { id: userId },\r\n          FETCH_CLEANING_SCHEDULE_FOR_USER\r\n        )\r\n      ),\r\n    fetchFullSchedule: () =>\r\n      dispatch(\r\n        getData(createUrl(GET_FULL_SCHEDULE_URL), FETCH_FULL_CLEANING_SCHEDULE)\r\n      ),\r\n    updateSchedule: cleaningObj =>\r\n      dispatch(postData(createUrl(UPDATE_SCHEDULE_URL), cleaningObj)),\r\n    sendEventInvites: email =>\r\n      dispatch(postData(createUrl(SEND_EVENT_INVITES_URL), { email }))\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Cleaning);\r\n","export default class FeedbackModel {\r\n  user;\r\n  feedback;\r\n  date;\r\n\r\n  constructor(user, feedback, date) {\r\n    this.user = user;\r\n    this.feedback = feedback;\r\n    this.date = date;\r\n  }\r\n}\r\n","import { Button, TextField, Typography } from \"@material-ui/core\";\r\nimport { Component, default as React } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { postData } from \"../../actions/action\";\r\nimport { ADD_FEEDBACK_URL, createUrl } from \"../../constants/url.constants\";\r\nimport FeedbackModel from \"../../models/FeedbackModel\";\r\n\r\nclass Feedback extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { feedback: \"\" };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange($event) {\r\n    this.setState({ feedback: $event.target.value });\r\n  }\r\n\r\n  sendFeedback = () => {\r\n    const { feedback } = this.state;\r\n    const { profileObj, sendFeedback } = this.props;\r\n    if (feedback && feedback.length > 2) {\r\n      let feedbackObj = new FeedbackModel(\r\n        profileObj,\r\n        feedback,\r\n        new Date()\r\n      );\r\n      sendFeedback(feedbackObj);\r\n      this.setState({ feedback: \"\" });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { feedback } = this.state;\r\n    return (\r\n      <div>\r\n        <Typography paragraph>Feedback</Typography>\r\n        <TextField\r\n          id=\"standard-multiline-static\"\r\n          label=\"Give Us Feedback\"\r\n          multiline\r\n          rows=\"6\"\r\n          placeholder=\"Let's make it better together!\"\r\n          style={{ width: \"100%\" }}\r\n          margin=\"normal\"\r\n          onChange={this.handleChange}\r\n          value={feedback}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={this.sendFeedback}>\r\n          Send\r\n          <i\r\n            style={{ marginLeft: \"10px\" }}\r\n            className=\"fa fa-paper-plane\"\r\n            aria-hidden=\"true\"\r\n          ></i>\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFeedback.propTypes = {};\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  return {};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    sendFeedback: feedbackObj =>\r\n      dispatch(postData(createUrl(ADD_FEEDBACK_URL), feedbackObj))\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Feedback);\r\n","export const UPVOTE = 1;\r\nexport const DOWNVOTE = -0.5;\r\n\r\nexport const VOTE_POINTS_KEY = \"vote\";\r\nexport const POPULAR_POINTS_KEY = \"points\";\r\n\r\nexport const SEPARATOR = \"--\";\r\n","import {\r\n  POPULAR_POINTS_KEY,\r\n  VOTE_POINTS_KEY\r\n} from \"../constants/vote.constants\";\r\nimport { checkIfEmpty } from \"./common.helper\";\r\n\r\nexport const mergeRecommendationsAndVotes = (recommendationData, voteData) => {\r\n  let foodData = [];\r\n  let voteDataIsEmpty = checkIfEmpty(voteData);\r\n  if (!checkIfEmpty(recommendationData)) {\r\n    Object.keys(recommendationData).forEach(key => {\r\n      let recommendation = recommendationData[key];\r\n      if (!voteDataIsEmpty && voteData[key]) {\r\n        recommendation[VOTE_POINTS_KEY] = voteData[key].points;\r\n      }\r\n      foodData.push(recommendation);\r\n    });\r\n  }\r\n  return foodData;\r\n};\r\n\r\nexport const voteFoodData = (recommendationID, foodData, vote) => {\r\n  let newFoodData = [];\r\n  foodData.forEach(food => {\r\n    if (food.id === recommendationID) {\r\n      food[VOTE_POINTS_KEY] = vote;\r\n    }\r\n    newFoodData.push(food);\r\n  });\r\n  return newFoodData;\r\n};\r\n\r\nexport const generatePopularFoodData = (recommendationData, voteData) => {\r\n  let popularFoodData = [];\r\n  let voteDataIsEmpty = checkIfEmpty(voteData);\r\n  if (!checkIfEmpty(recommendationData)) {\r\n    Object.keys(recommendationData).forEach(key => {\r\n      let recommendation = recommendationData[key];\r\n      recommendation[POPULAR_POINTS_KEY] = 0;\r\n      if (!voteDataIsEmpty && voteData[key]) {\r\n        recommendation[POPULAR_POINTS_KEY] = voteData[key];\r\n      }\r\n      popularFoodData.push(recommendation);\r\n    });\r\n  }\r\n  return popularFoodData.sort(compareFoodByPoints);\r\n};\r\n\r\n/* comparator to order objects based on points in reverse order */\r\nfunction compareFoodByPoints(obj1, obj2) {\r\n  let comparison = 0;\r\n  if (obj1.points > obj2.points) comparison = 1;\r\n  if (obj2.points > obj1.points) comparison = -1;\r\n\r\n  return comparison * -1; // -1 is to reverse sort\r\n}\r\n","export default class VoteModel {\r\n  recommendationId;\r\n  email;\r\n  points;\r\n  date;\r\n\r\n  constructor(recommendationId, email, points, date) {\r\n    this.recommendationId = recommendationId;\r\n    this.email = email;\r\n    this.points = points;\r\n    this.date = date;\r\n  }\r\n}\r\n","export default class RecommendationModel {\r\n  email;\r\n  foodName;\r\n  date;\r\n\r\n  constructor(email, foodName, date) {\r\n    this.email = email;\r\n    this.foodName = foodName;\r\n    this.date = date;\r\n  }\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { postData } from \"../../../actions/action\";\r\nimport { ADD_RECO_URL, createUrl } from \"../../../constants/url.constants\";\r\nimport RecommendationModel from \"../../../models/RecommendationModel\";\r\nimport \"./../Food.css\";\r\n\r\nclass Recommendation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.state = { name: \"\" };\r\n    this.addReco = this.addReco.bind(this);\r\n  }\r\n\r\n  addReco() {\r\n    const { name } = this.state;\r\n    const {\r\n      profileObj,\r\n      addRecommendation,\r\n      fetchAllFoodData,\r\n      updateWeek,\r\n      currentWeek\r\n    } = this.props;\r\n    if (name && name.length > 2) {\r\n      let recommendation = new RecommendationModel(\r\n        profileObj.email,\r\n        name,\r\n        new Date()\r\n      );\r\n      addRecommendation(recommendation);\r\n      this.setState({ name: \"\" });\r\n      updateWeek(currentWeek);\r\n      setTimeout(() => {\r\n        fetchAllFoodData();\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  handleChange($event) {\r\n    this.setState({ name: $event.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { name } = this.state;\r\n    const { classes } = this.props;\r\n    return (\r\n      <>\r\n        <Typography variant=\"caption\" className=\"details-header\">\r\n          Please check if already present!\r\n        </Typography>\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Food Name\"\r\n          placeholder=\"Min. 3 characters\"\r\n          className={classes.textField}\r\n          value={name}\r\n          onChange={this.handleChange}\r\n          margin=\"normal\"\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => this.addReco()}\r\n        >\r\n          Send\r\n          <i\r\n            style={{ marginLeft: \"10px\" }}\r\n            className=\"fa fa-paper-plane\"\r\n            aria-hidden=\"true\"\r\n          ></i>\r\n        </Button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nRecommendation.propTypes = {};\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  return {};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    addRecommendation: recommendation =>\r\n      dispatch(postData(createUrl(ADD_RECO_URL), recommendation))\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Recommendation);\r\n","import Icon from \"@material-ui/core/Icon\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport React from \"react\";\r\nimport { DOWNVOTE, UPVOTE, VOTE_POINTS_KEY } from \"../../../constants/vote.constants\";\r\nimport { isAdmin } from \"../../../helpers/visibility.helper\";\r\nimport CircularIndeterminate from \"../../common/CircularIndeterminate\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    overflowX: \"auto\"\r\n  }\r\n}));\r\n\r\nexport default function VoteTable(props) {\r\n  const classes = useStyles();\r\n  const { rows, vote, profileObj, deleteRecommendation } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        {rows && rows.length ? (\r\n          <Table className={classes.table} size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Recommendations</TableCell>\r\n                <TableCell>Points</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map(row => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <div>{row.foodName}</div>\r\n                    <Icon onClick={() => vote(row.id, UPVOTE)}>\r\n                      <i\r\n                        style={{\r\n                          color: row[VOTE_POINTS_KEY] === 1 ? \"green\" : \"grey\"\r\n                        }}\r\n                        className=\"fas fa-thumbs-up vote-icon\"\r\n                      ></i>\r\n                    </Icon>{\" \"}\r\n                    <Icon onClick={() => vote(row.id, DOWNVOTE)}>\r\n                      <i\r\n                        style={{\r\n                          color: row[VOTE_POINTS_KEY] === -0.5 ? \"red\" : \"grey\"\r\n                        }}\r\n                        className=\"fas fa-thumbs-down vote-icon\"\r\n                      ></i>\r\n                    </Icon>{\" \"}\r\n                    {isAdmin(profileObj) && (\r\n                      <Icon onClick={() => deleteRecommendation(row.id)}>\r\n                        <i\r\n                          style={{ color: \"grey\" }}\r\n                          className=\"fas fa-trash-alt vote-icon\"\r\n                        ></i>\r\n                      </Icon>\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{row.points}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        ) : (\r\n          <CircularIndeterminate />\r\n        )}\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport VoteTable from \"./VoteTable\";\r\n\r\nexport default class Vote extends Component {\r\n  render() {\r\n    const { foodData } = this.props;\r\n    return (\r\n      <VoteTable\r\n        style={{ paddingLeft: \"5px\" }}\r\n        rows={foodData}\r\n        {...this.props}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import { FormControl, InputLabel, MenuItem, Select, Typography } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { postData } from \"../../actions/action\";\r\nimport { continuousCall } from \"../../constants/time.constants\";\r\nimport { FETCH_ALL_RECOS, FETCH_ALL_VOTES, FETCH_VOTES_BY_EMAIL } from \"../../constants/types.constants\";\r\nimport { createUrl, DELETE_RECO_URL, GET_ALL_RECOS_URL, GET_ALL_VOTES_BY_EMAIL_URL, GET_ALL_VOTES_URL, POST_VOTE_URL } from \"../../constants/url.constants\";\r\nimport { ACCESS_FOOD_KEY } from \"../../constants/user.constants\";\r\nimport { generatePopularFoodData, mergeRecommendationsAndVotes, voteFoodData } from \"../../helpers/food.helper\";\r\nimport { isAccessible } from \"../../helpers/visibility.helper\";\r\nimport VoteModel from \"../../models/VoteModel\";\r\nimport PermissionDenied from \"../common/PermissionDenied\";\r\nimport \"./../common/common.css\";\r\nimport Recommendation from \"./recommendation/Recommendation\";\r\nimport SimpleExpansionPanel from \"./SimpleExpansionPanel\";\r\nimport Vote from \"./vote/Vote\";\r\n\r\nclass Food extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      foodData: {},\r\n      popularFoodData: {},\r\n      week: props.week\r\n    };\r\n    this.vote = this.vote.bind(this);\r\n    this.fetchAllFoodData = this.fetchAllFoodData.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.updateWeek = this.updateWeek.bind(this);\r\n    this.deleteRecommendation = this.deleteRecommendation.bind(this);\r\n  }\r\n\r\n  vote(recommendationID, points) {\r\n    const { foodData } = this.state;\r\n    const { profileObj, addVote } = this.props;\r\n    this.setState({\r\n      foodData: voteFoodData(recommendationID, foodData, points)\r\n    });\r\n    let vote = new VoteModel(\r\n      recommendationID,\r\n      profileObj.email,\r\n      points,\r\n      new Date()\r\n    );\r\n    addVote(vote);\r\n  }\r\n\r\n  deleteRecommendation(id) {\r\n    this.props.deleteRecommendationById(id);\r\n    setTimeout(() => {\r\n      this.fetchAllFoodData();\r\n    }, 500);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      ...this.state,\r\n      week: event.target.value\r\n    });\r\n  }\r\n\r\n  updateWeek(week) {\r\n    this.setState({ ...this.state, week });\r\n  }\r\n\r\n  fetchAllFoodData() {\r\n    const {\r\n      fetchRecommendations,\r\n      fetchVotes,\r\n      fetchVotesByEmail,\r\n      profileObj\r\n    } = this.props;\r\n    const { week } = this.state;\r\n    fetchRecommendations(week.startDate.value, week.endDate.value);\r\n    fetchVotes(week.startDate.value, week.endDate.value);\r\n    fetchVotesByEmail(\r\n      profileObj.email,\r\n      week.startDate.value,\r\n      week.endDate.value\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    clearInterval(this.foodInterval);\r\n    this.foodInterval = continuousCall(this.fetchAllFoodData, this.props);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { recommendationData, voteDataByEmail, voteData } = this.props;\r\n    const { week } = this.state;\r\n    if (week !== prevState.week) {\r\n      this.componentDidMount();\r\n    }\r\n    if (\r\n      recommendationData !== prevProps.recommendationData ||\r\n      voteDataByEmail !== prevProps.voteDataByEmail ||\r\n      voteData !== prevProps.voteData\r\n    ) {\r\n      this.setState({\r\n        foodData: mergeRecommendationsAndVotes(\r\n          recommendationData,\r\n          voteDataByEmail\r\n        ),\r\n        popularFoodData: generatePopularFoodData(recommendationData, voteData)\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { foodData, popularFoodData, week } = this.state;\r\n    const { profileObj, currentWeek, lastWeek } = this.props;\r\n    return isAccessible(profileObj, ACCESS_FOOD_KEY) ? (\r\n      <div>\r\n        <Typography paragraph>Food</Typography>\r\n        <FormControl style={{ marginBottom: \"16px\", width: \"60%\" }}>\r\n          <InputLabel htmlFor=\"date-simple\">Week</InputLabel>\r\n          <Select\r\n            value={week}\r\n            onChange={this.handleChange}\r\n            inputProps={{\r\n              name: \"date\",\r\n              id: \"date-simple\"\r\n            }}\r\n          >\r\n            <MenuItem value={currentWeek}>\r\n              This Week\r\n              {/* {currentWeek.startDate} - {currentWeek.endDate} */}\r\n            </MenuItem>\r\n            <MenuItem value={lastWeek}>\r\n              Previous Week\r\n              {/* {lastWeek.startDate} - {lastWeek.endDate} */}\r\n            </MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <SimpleExpansionPanel\r\n          foodData={foodData}\r\n          popularFoodData={popularFoodData}\r\n          vote={this.vote}\r\n          deleteRecommendation={this.deleteRecommendation}\r\n          updateWeek={this.updateWeek}\r\n          fetchAllFoodData={this.fetchAllFoodData}\r\n          {...this.props}\r\n        >\r\n          <Recommendation panelHeader=\"Recommendation\" />\r\n          <Vote panelHeader=\"Vote\" panelClassName=\"no-padding-expansion-panel\" />\r\n        </SimpleExpansionPanel>\r\n      </div>\r\n    ) : (\r\n      <PermissionDenied profileObj={profileObj} />\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.foodInterval);\r\n  }\r\n}\r\n\r\nFood.propTypes = {};\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  return {\r\n    recommendationData: state.recommendationReducer.recommendationData,\r\n    voteData: state.voteReducer.voteData,\r\n    voteDataByEmail: state.voteReducer.voteDataByEmail\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    fetchRecommendations: (weekStartDate, weekEndDate) =>\r\n      dispatch(\r\n        postData(\r\n          createUrl(GET_ALL_RECOS_URL),\r\n          { weekStartDate, weekEndDate },\r\n          FETCH_ALL_RECOS\r\n        )\r\n      ),\r\n    deleteRecommendationById: id =>\r\n      dispatch(postData(createUrl(DELETE_RECO_URL), { id })),\r\n    fetchVotes: (weekStartDate, weekEndDate) =>\r\n      dispatch(\r\n        postData(\r\n          createUrl(GET_ALL_VOTES_URL),\r\n          { weekStartDate, weekEndDate },\r\n          FETCH_ALL_VOTES\r\n        )\r\n      ),\r\n    fetchVotesByEmail: (email, weekStartDate, weekEndDate) =>\r\n      dispatch(\r\n        postData(\r\n          createUrl(GET_ALL_VOTES_BY_EMAIL_URL),\r\n          { email, week: { weekStartDate, weekEndDate } },\r\n          FETCH_VOTES_BY_EMAIL\r\n        )\r\n      ),\r\n    addVote: vote => dispatch(postData(createUrl(POST_VOTE_URL), vote))\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Food);\r\n","export default class GroceryModel {\r\n  user;\r\n  itemName;\r\n  date;\r\n\r\n  constructor(user, itemName, date) {\r\n    this.user = user;\r\n    this.itemName = itemName;\r\n    this.date = date;\r\n  }\r\n}\r\n","import { Divider, ListItem, ListItemAvatar } from \"@material-ui/core\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { postData } from \"../../../actions/action\";\r\nimport { continuousCall } from \"../../../constants/time.constants\";\r\nimport { FETCH_GROCERY } from \"../../../constants/types.constants\";\r\nimport { createUrl, GET_GROCERY_URL } from \"../../../constants/url.constants\";\r\nimport { checkIfEmpty } from \"../../../helpers/common.helper\";\r\nimport { getLastWeekStartDate } from \"../../../helpers/date.helper\";\r\nimport CircularIndeterminate from \"../../common/CircularIndeterminate\";\r\n\r\nclass GroceryAdmin extends Component {\r\n  fetchGroceryData(props) {\r\n    const { fetchGrocery } = props;\r\n    fetchGrocery(getLastWeekStartDate());\r\n  }\r\n\r\n  componentDidMount() {\r\n    clearInterval(this.groceryInterval);\r\n    this.groceryInterval = continuousCall(this.fetchGroceryData, this.props);\r\n  }\r\n\r\n  render() {\r\n    const { grocery, marginStyle } = this.props;\r\n    return !checkIfEmpty(grocery) ? (\r\n      <div style={marginStyle}>\r\n        <List dense={true}>\r\n          {grocery.map((obj, index) => (\r\n            <div key={obj.id}>\r\n              <Divider variant=\"fullWidth\" component=\"li\" />\r\n              <ListItem alignItems=\"flex-start\">\r\n                <ListItemAvatar style={{ minWidth: \"44px\" }}>\r\n                  <img\r\n                    style={{ borderRadius: \"50%\", height: \"30px\" }}\r\n                    src={checkIfEmpty(obj.user) ? null : obj.user.imageUrl}\r\n                    alt=\"img\"\r\n                  ></img>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={\r\n                    <React.Fragment>\r\n                      <Typography>\r\n                        {checkIfEmpty(obj.user) ? null : obj.user.name}\r\n                      </Typography>\r\n                      <Typography style={{ fontSize: \"13px\" }} className=\"role\">\r\n                        {new Date(obj.date).toLocaleDateString() +\r\n                          \" \" +\r\n                          new Date(obj.date).toLocaleTimeString()}\r\n                      </Typography>\r\n                      <Typography>{obj.itemName}</Typography>\r\n                    </React.Fragment>\r\n                  }\r\n                />\r\n              </ListItem>\r\n            </div>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    ) : (\r\n      <CircularIndeterminate />\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.groceryInterval);\r\n  }\r\n}\r\n\r\nGroceryAdmin.propTypes = {};\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  return {\r\n    grocery: state.adminReducer.grocery\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    fetchGrocery: date =>\r\n      dispatch(postData(createUrl(GET_GROCERY_URL), date, FETCH_GROCERY))\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(GroceryAdmin);\r\n","import { Button, Paper, TextField, Typography } from \"@material-ui/core\";\r\nimport { Component, default as React } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { postData } from \"../../actions/action\";\r\nimport { ADD_GROCERY_URL, createUrl } from \"../../constants/url.constants\";\r\nimport { ACCESS_GROCERY_KEY } from \"../../constants/user.constants\";\r\nimport { isAccessible } from \"../../helpers/visibility.helper\";\r\nimport GroceryModel from \"../../models/GroceryModel\";\r\nimport GroceryAdmin from \"../admin/grocery/GroceryAdmin\";\r\nimport PermissionDenied from \"../common/PermissionDenied\";\r\nimport \"./Grocery.css\";\r\n\r\nclass Grocery extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { grocery: \"\" };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange($event) {\r\n    this.setState({ grocery: $event.target.value });\r\n  }\r\n\r\n  sendGrocery = () => {\r\n    const { grocery } = this.state;\r\n    const { profileObj, sendGrocery } = this.props;\r\n    if (grocery && grocery.length > 2) {\r\n      let groceryObj = new GroceryModel(profileObj, grocery, new Date());\r\n      sendGrocery(groceryObj);\r\n      this.setState({ grocery: \"\" });\r\n    }\r\n  };\r\n  render() {\r\n    const { profileObj } = this.props;\r\n    const { grocery } = this.state;\r\n\r\n    return isAccessible(profileObj, ACCESS_GROCERY_KEY) ? (\r\n      <div>\r\n        <Typography paragraph>Grocery</Typography>\r\n        <Paper>\r\n          <div className=\"send-grocery\">\r\n            <TextField\r\n              id=\"standard-multiline-static\"\r\n              label=\"Item Name\"\r\n              multiline\r\n              rows=\"6\"\r\n              placeholder=\"Add something to the Grocery List\"\r\n              style={{ width: \"100%\" }}\r\n              margin=\"normal\"\r\n              onChange={this.handleChange}\r\n              value={grocery}\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={this.sendGrocery}\r\n            >\r\n              Send\r\n              <i\r\n                style={{ marginLeft: \"10px\" }}\r\n                className=\"fa fa-paper-plane\"\r\n                aria-hidden=\"true\"\r\n              ></i>\r\n            </Button>\r\n          </div>\r\n        </Paper>\r\n        {/* <Divider style={{ marginTop: \"12px\", marginBottom: \"12px\" }} /> */}\r\n        <Paper>\r\n          <div className=\"grocery-list-header\">\r\n            <Typography paragraph>Grocery List</Typography>\r\n          </div>\r\n          <GroceryAdmin />\r\n        </Paper>\r\n      </div>\r\n    ) : (\r\n      <PermissionDenied profileObj={profileObj} />\r\n    );\r\n  }\r\n}\r\n\r\nGrocery.propTypes = {};\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  return {};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    sendGrocery: groceryObj =>\r\n      dispatch(postData(createUrl(ADD_GROCERY_URL), groceryObj))\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Grocery);\r\n","import { Button, Typography } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  createUrl,\r\n  DOWNLOAD_SCHEDULE_URL\r\n} from \"../../constants/url.constants\";\r\nimport { ACCESS_SCHEDULE_KEY } from \"../../constants/user.constants\";\r\nimport { isAccessible } from \"../../helpers/visibility.helper\";\r\nimport PermissionDenied from \"../common/PermissionDenied\";\r\n\r\nexport default class Schedule extends Component {\r\n  render() {\r\n    const { profileObj } = this.props;\r\n\r\n    return isAccessible(profileObj, ACCESS_SCHEDULE_KEY) ? (\r\n      <>\r\n        <Typography paragraph>Schedule</Typography>\r\n        <Typography style={{ fontSize: \"12px\" }}>\r\n          Click the below button to download <b>current month's schedule</b>\r\n        </Typography>\r\n        <Button\r\n          style={{ marginTop: \"10px\" }}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          href={createUrl(DOWNLOAD_SCHEDULE_URL)}\r\n        >\r\n          <i\r\n            className=\"fas fa-file-download\"\r\n            style={{ marginRight: \"10px\", fontSize: \"18px\" }}\r\n          ></i>\r\n          Download\r\n        </Button>\r\n      </>\r\n    ) : (\r\n      <PermissionDenied profileObj={profileObj} />\r\n    );\r\n  }\r\n}\r\n","export const route = {\r\n  Food: \"/home/food\",\r\n  Grocery: \"/home/grocery\",\r\n  Cleaning: \"/home/cleaning\",\r\n  Schedule: \"/home/schedule\",\r\n  Admin: \"/home/admin\",\r\n  Feedback: \"/home/feedback\",\r\n  \"About Us\": \"/home/about-us\"\r\n};\r\n","import AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport clsx from \"clsx\";\r\nimport React from \"react\";\r\nimport { GoogleLogout } from \"react-google-login\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport AboutUs from \"./components/about-us/AboutUs\";\r\nimport Admin from \"./components/admin/Admin\";\r\nimport Cleaning from \"./components/cleaning/Cleaning\";\r\nimport { AboutUsIcon, AdminIcon, CleaningIcon, FeedbackIcon, FoodIcon, GroceryIcon, ScheduleIcon } from \"./components/common/Icons\";\r\nimport PermissionDenied from \"./components/common/PermissionDenied\";\r\nimport Feedback from \"./components/feedback/Feedback\";\r\nimport Food from \"./components/food/Food\";\r\nimport Grocery from \"./components/grocery/Grocery\";\r\nimport Schedule from \"./components/schedule/Schedule\";\r\nimport { route } from \"./constants/route.constants\";\r\nimport { isAdminVisibile } from \"./helpers/visibility.helper\";\r\nimport \"./MiniDrawer.css\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  menuButton: {\r\n    marginRight: 36\r\n  },\r\n  hide: {\r\n    display: \"none\"\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\"\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1\r\n    }\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: \"3%\"\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  }\r\n}));\r\n\r\nfunction navigate(props, path) {\r\n  props.history.push(path);\r\n}\r\n\r\nexport default function MiniDrawer(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const openMenu = Boolean(anchorEl);\r\n  const { profileObj, logoutSuccess } = props;\r\n\r\n  function handleDrawerOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleDrawerClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  function handleMenu(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap className={classes.title}>\r\n            Charanraj\r\n          </Typography>\r\n\r\n          <div>\r\n            <IconButton\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMenu}\r\n              color=\"inherit\"\r\n            >\r\n              <img\r\n                src={profileObj.imageUrl}\r\n                alt=\"img\"\r\n                className=\"profile-img\"\r\n              ></img>\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorEl}\r\n              anchorOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\"\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\"\r\n              }}\r\n              open={openMenu}\r\n              onClose={handleClose}\r\n            >\r\n              <GoogleLogout\r\n                clientId=\"307183319961-39gbt32pgbtveh1vbqfbc7ihjsbhp8oq.apps.googleusercontent.com\"\r\n                buttonText=\"Logout\"\r\n                onLogoutSuccess={logoutSuccess}\r\n                render={renderProps => (\r\n                  <MenuItem onClick={renderProps.onClick}>Sign Out</MenuItem>\r\n                )}\r\n              ></GoogleLogout>\r\n            </Menu>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open\r\n          })\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbar} onClick={handleDrawerClose}>\r\n          <IconButton>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {[\"Food\", \"Grocery\", \"Cleaning\", \"Schedule\"].map((text, index) => (\r\n            <ListItem\r\n              button\r\n              key={text}\r\n              onClick={() => navigate(props, route[text])}\r\n            >\r\n              <ListItemIcon>\r\n                <div>\r\n                  {index === 0 && <FoodIcon />}\r\n                  {index === 1 && <GroceryIcon />}\r\n                  {index === 2 && <CleaningIcon />}\r\n                  {index === 3 && <ScheduleIcon />}\r\n                </div>\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {[\"Admin\", \"Feedback\", \"About Us\"].map((text, index) => (\r\n            <ListItem\r\n              button\r\n              key={text}\r\n              onClick={() => navigate(props, route[text])}\r\n            >\r\n              <ListItemIcon>\r\n                <div>\r\n                  {index === 0 && <AdminIcon />}\r\n                  {index === 1 && <FeedbackIcon />}\r\n                  {index === 2 && <AboutUsIcon />}\r\n                </div>\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <Route exact path=\"/home\" render={() => <Redirect to=\"/home/food\" />} />\r\n        <Route exact path=\"/home/food\" render={() => <Food {...props} />} />\r\n        <Route exact path=\"/home/grocery\" render={() => <Grocery {...props} />} />\r\n        <Route exact path=\"/home/cleaning\" render={() => <Cleaning {...props} />} />\r\n        <Route exact path=\"/home/schedule\" render={() => <Schedule {...props} />} />\r\n        <Route exact path=\"/home/admin\" render={() => isAdminVisibile(profileObj) ? (<Admin {...props} />) : (<PermissionDenied profileObj={profileObj} />) } />\r\n        <Route exact path=\"/home/feedback\" render={() => <Feedback {...props} />} />\r\n        <Route exact path=\"/home/about-us\" render={() => <AboutUs {...props} />} />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport IdleTimer from \"react-idle-timer\";\r\nimport { connect } from \"react-redux\";\r\nimport { postData, resetState } from \"./actions/action\";\r\nimport CircularIndeterminate from \"./components/common/CircularIndeterminate\";\r\nimport { IDLE_TIME } from \"./constants/time.constants\";\r\nimport { FETCH_USER, LOGOUT } from \"./constants/types.constants\";\r\nimport { createUrl, GET_USER_URL } from \"./constants/url.constants\";\r\nimport { getCurrentWeek, getLastWeek } from \"./helpers/date.helper\";\r\nimport { getProfileObj, removeProfileObj } from \"./helpers/session.helper\";\r\nimport MiniDrawer from \"./MiniDrawer\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { profileObj: null };\r\n    this.idleTimer = null;\r\n    this.logoutSuccess = this._logoutSuccess.bind(this);\r\n    this.onIdle = this._onIdle.bind(this);\r\n  }\r\n\r\n  _onIdle() {\r\n    console.log(\"user was idle for \" + IDLE_TIME / (60 * 1000) + \" minutes \");\r\n    console.log(\"logging user out\");\r\n    this._logoutSuccess();\r\n  }\r\n\r\n  _logoutSuccess() {\r\n    removeProfileObj();\r\n    this.props.history.push(\"/login\");\r\n  }\r\n\r\n  checkIfUserIsLoggedIn() {\r\n    let profileObj = getProfileObj();\r\n    if (profileObj) {\r\n      this.props.getUser(profileObj);\r\n    } else {\r\n      this.props.history.push(\"/login\");\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.checkIfUserIsLoggedIn();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { profileObjWithRole } = this.props;\r\n    if (profileObjWithRole !== prevProps.profileObjWithRole) {\r\n      this.setState({ profileObj: profileObjWithRole });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { profileObj } = this.state;\r\n    const lastWeek = getLastWeek();\r\n    const currentWeek = getCurrentWeek();\r\n    return (\r\n      <div>\r\n        <IdleTimer\r\n          ref={ref => {\r\n            this.idleTimer = ref;\r\n          }}\r\n          element={document}\r\n          onIdle={this.onIdle}\r\n          debounce={250}\r\n          timeout={IDLE_TIME}\r\n        />\r\n        {profileObj ? (\r\n          <MiniDrawer\r\n            logoutSuccess={this._logoutSuccess}\r\n            profileObj={profileObj}\r\n            week={currentWeek}\r\n            currentWeek={currentWeek}\r\n            lastWeek={lastWeek}\r\n            {...this.props}\r\n          />\r\n        ) : (\r\n          <CircularIndeterminate />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHome.propTypes = {};\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  return {\r\n    profileObjWithRole: state.userReducer.profileObj\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getUser: profileObj =>\r\n      dispatch(postData(createUrl(GET_USER_URL), profileObj, FETCH_USER)),\r\n    resetState: () => dispatch(resetState(LOGOUT))\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Home);\r\n","import React, { Component } from \"react\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport { getProfileObj, setProfileObj } from \"./helpers/session.helper\";\r\nimport \"./Login.css\";\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.successResponseGoogle = this.successResponseGoogle.bind(this);\r\n    this.failureResponseGoogle = this.failureResponseGoogle.bind(this);\r\n  }\r\n\r\n  successResponseGoogle(response) {\r\n    if (response) {\r\n      setProfileObj(response.profileObj);\r\n      this.props.history.push(\"/home\");\r\n    }\r\n  }\r\n\r\n  failureResponseGoogle(response) {\r\n    console.log(response);\r\n  }\r\n\r\n  checkIfUserIsLoggedIn() {\r\n    let profileObj = getProfileObj();\r\n    if (profileObj) {\r\n      this.props.history.push(\"/home\");\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.checkIfUserIsLoggedIn();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <GoogleLogin\r\n          clientId=\"307183319961-39gbt32pgbtveh1vbqfbc7ihjsbhp8oq.apps.googleusercontent.com\"\r\n          buttonText=\"Login\"\r\n          onSuccess={this.successResponseGoogle}\r\n          onFailure={this.failureResponseGoogle}\r\n          cookiePolicy={\"single_host_origin\"}\r\n          render={renderProps => (\r\n            <div className=\"col\" onClick={renderProps.onClick}>\r\n              <div className=\"google btn\">\r\n                <i className=\"fab fa-google\"></i> &nbsp; Login with Google\r\n              </div>\r\n            </div>\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Login from \"./Login\";\n\nfunction App() {\n  return (\n    <div>\n      <Switch>\n        <Redirect exact from=\"/\" to=\"/login\" />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/home\" component={Home} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import {\r\n  FETCH_ALL_REQUESTS,\r\n  FETCH_APPROVED_USERS,\r\n  FETCH_FEEDBACK,\r\n  FETCH_GROCERY\r\n} from \"../constants/types.constants\";\r\nimport { initialState } from \"./app.reducer\";\r\n\r\nconst adminReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_ALL_REQUESTS:\r\n      return {\r\n        ...state,\r\n        requests: action.data\r\n      };\r\n    case FETCH_APPROVED_USERS:\r\n      return {\r\n        ...state,\r\n        approvedUsers: action.data\r\n      };\r\n    case FETCH_FEEDBACK:\r\n      return {\r\n        ...state,\r\n        feedback: action.data\r\n      };\r\n    case FETCH_GROCERY:\r\n      return {\r\n        ...state,\r\n        grocery: action.data\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default adminReducer;\r\n","import { FETCH_CLEANING_SCHEDULE_FOR_USER, FETCH_FULL_CLEANING_SCHEDULE } from \"../constants/types.constants\";\r\nimport { initialState } from \"./app.reducer\";\r\n\r\nconst cleaningReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_CLEANING_SCHEDULE_FOR_USER:\r\n      return {\r\n        ...state,\r\n        userCleaningSchedule: action.data\r\n      };\r\n    case FETCH_FULL_CLEANING_SCHEDULE:\r\n      return {\r\n        ...state,\r\n        fullCleaningSchedule: action.data\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cleaningReducer;\r\n","import { initialState } from \"./app.reducer\";\r\nimport { FETCH_ALL_RECOS } from \"../constants/types.constants\";\r\n\r\nconst recommendationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_ALL_RECOS:\r\n      return {\r\n        ...state,\r\n        recommendationData: action.data\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default recommendationReducer;\r\n","import { FETCH_USER } from \"../constants/types.constants\";\r\nimport { initialState } from \"./app.reducer\";\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_USER:\r\n      return {\r\n        ...state,\r\n        profileObj: action.data\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import { FETCH_ALL_VOTES, FETCH_VOTES_BY_EMAIL } from \"../constants/types.constants\";\r\nimport { initialState } from \"./app.reducer\";\r\n\r\nconst voteReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_VOTES_BY_EMAIL:\r\n      return {\r\n        ...state,\r\n        voteDataByEmail: action.data\r\n      };\r\n    case FETCH_ALL_VOTES:\r\n      return {\r\n        ...state,\r\n        voteData: action.data\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default voteReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport { LOGOUT } from \"../constants/types.constants\";\r\nimport adminReducer from \"./admin.reducer\";\r\nimport cleaningReducer from \"./cleaning.reducer\";\r\nimport recommendationReducer from \"./recommendation.reducer\";\r\nimport userReducer from \"./user.reducer\";\r\nimport voteReducer from \"./vote.reducer\";\r\n\r\nexport const initialState = {\r\n  recommendationData: {},\r\n  voteDataByEmail: {}\r\n};\r\n\r\nexport const appReducer = combineReducers({\r\n  cleaningReducer,\r\n  voteReducer,\r\n  recommendationReducer,\r\n  userReducer,\r\n  adminReducer\r\n});\r\n\r\nexport const rootReducer = (state, action) => {\r\n  if (action.type === LOGOUT) {\r\n    state = initialState;\r\n  }\r\n  return appReducer(state, action);\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport { rootReducer } from \"./reducers/app.reducer\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}