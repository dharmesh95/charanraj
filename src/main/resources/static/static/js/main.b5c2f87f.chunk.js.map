{"version":3,"sources":["helpers/session.helper.js","constants/session.constants.js","constants/types.constants.js","components/common/Spinner.js","icons/GoogleIcon.js","login.styles.js","Login.js","App.js","reducers/admin.reducer.js","reducers/cleaning.reducer.js","reducers/recommendation.reducer.js","reducers/user.reducer.js","reducers/vote.reducer.js","reducers/app.reducer.js","serviceWorker.js","index.js"],"names":["getProfileObj","profileObjString","sessionStorage","getItem","JSON","parse","setProfileObj","profileObj","setItem","stringify","removeProfileObj","removeItem","FETCH_USER","FETCH_ALL_RECOS","FETCH_CLEANING_SCHEDULE_FOR_USER","FETCH_FULL_CLEANING_SCHEDULE","DOWNLOAD_CLEANING_SCHEDULE","FETCH_VOTE_DATA","FETCH_GROCERY","FETCH_FEEDBACK","FETCH_ALL_REQUESTS","FETCH_APPROVED_USERS","LOGOUT","DEFAULT","useStyles","makeStyles","theme","progress","margin","spacing","alignment","textAlign","Spinner","classes","className","GoogleIcon","this","props","xmlns","viewBox","d","Component","ButtonDiv","styled","div","GoogleLoginIcon","LoginButton","css","GoogleColor","GoogleLoginButton","Login","successResponseGoogle","response","history","push","failureResponseGoogle","console","log","checkIfUserIsLoggedIn","clientId","onSuccess","onFailure","cookiePolicy","render","renderProps","onClick","Home","lazy","App","fallback","exact","from","to","path","component","adminReducer","state","initialState","action","type","requests","data","approvedUsers","feedback","grocery","cleaningReducer","userCleaningSchedule","fullCleaningSchedule","byteCharacters","atob","byteNumbers","Array","length","i","charCodeAt","byteArray","Uint8Array","blob","Blob","blobUrl","URL","createObjectURL","a","document","createElement","body","appendChild","style","href","download","click","revokeObjectURL","recommendationReducer","recommendationData","userReducer","houses","house_id","voteReducer","voteData","voteDataByEmail","appReducer","combineReducers","Boolean","window","location","hostname","match","middlewares","thunk","store","createStore","applyMiddleware","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b5c2f87f.chunk.js","sourcesContent":["import { GOOGLE_USER_PROFILE_OBJ_KEY } from \"../constants/session.constants\";\r\n\r\nexport function getProfileObj() {\r\n  let profileObjString = sessionStorage.getItem(GOOGLE_USER_PROFILE_OBJ_KEY);\r\n  if (profileObjString) return JSON.parse(profileObjString);\r\n  return null;\r\n}\r\n\r\nexport function setProfileObj(profileObj) {\r\n  sessionStorage.setItem(\r\n    GOOGLE_USER_PROFILE_OBJ_KEY,\r\n    JSON.stringify(profileObj)\r\n  );\r\n}\r\n\r\nexport function removeProfileObj() {\r\n  sessionStorage.removeItem(GOOGLE_USER_PROFILE_OBJ_KEY);\r\n}\r\n","export const GOOGLE_USER_PROFILE_OBJ_KEY = \"GOOGLE_USER_PROFILE_OBJ\";\r\n","export const FETCH_USER = \"FETCH_USER\";\r\n\r\nexport const FETCH_ALL_RECOS = \"FETCH_ALL_RECOS\";\r\n\r\nexport const FETCH_CLEANING_SCHEDULE_FOR_USER =\r\n  \"FETCH_CLEANING_SCHEDULE_FOR_USER\";\r\nexport const FETCH_FULL_CLEANING_SCHEDULE = \"FETCH_FULL_CLEANING_SCHEDULE\";\r\n\r\nexport const FETCH_CLEANING_SCHEDULE = \"FETCH_CLEANING_SCHEDULE\";\r\nexport const DOWNLOAD_CLEANING_SCHEDULE = \"DOWNLOAD_CLEANING_SCHEDULE\";\r\n\r\nexport const FETCH_VOTE_DATA = \"FETCH_VOTE_DATA\";\r\n\r\nexport const FETCH_GROCERY = \"FETCH_GROCERY\";\r\n\r\nexport const FETCH_FEEDBACK = \"FETCH_FEEDBACK\";\r\n\r\nexport const FETCH_ALL_REQUESTS = \"FETCH_ALL_REQUESTS\";\r\nexport const FETCH_APPROVED_USERS = \"FETCH_APPROVED_USERS\";\r\n\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const DEFAULT = \"DEFAULT\";\r\n","import CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  progress: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  alignment: { textAlign: \"center\"}\r\n}));\r\n\r\nexport default function Spinner() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.alignment}>\r\n      <CircularProgress className={classes.progress} />\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class GoogleIcon extends Component {\r\n  render() {\r\n    return (\r\n      <svg\r\n        className={this.props.className}\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 488 512\"\r\n      >\r\n        <path d=\"M488 261.8C488 403.3 391.1 504 248 504 110.8 504 0 393.2 0 256S110.8 8 248 8c66.8 0 123 24.5 166.3 64.9l-67.5 64.9C258.5 52.6 94.3 116.6 94.3 256c0 86.5 69.1 156.6 153.7 156.6 98.2 0 135-70.4 140.8-106.9H248v-85.3h236.1c2.3 12.7 3.9 24.9 3.9 41.4z\" />\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n","import styled, { css } from \"styled-components\";\r\nimport GoogleIcon from \"./icons/GoogleIcon\";\r\n\r\nexport const ButtonDiv = styled.div`\r\n  width: 50%;\r\n  margin: auto;\r\n  margin-top: 200px;\r\n`;\r\n\r\nexport const GoogleLoginIcon = styled(GoogleIcon)`\r\n  height: 20px;\r\n  vertical-align: bottom;\r\n  fill: white;\r\n`;\r\n\r\nexport const LoginButton = css`\r\n  min-width: 168px;\r\n  /* width: 50%; */\r\n  width: 100%;\r\n  padding: 12px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  margin: 5px 0;\r\n  opacity: 0.85;\r\n  display: inline-block;\r\n  line-height: 20px;\r\n  text-decoration: none;\r\n`;\r\n\r\nexport const GoogleColor = css`\r\n  background-color: #df4930;\r\n  color: white;\r\n`;\r\n\r\nexport const GoogleLoginButton = styled.div`\r\n  ${LoginButton};\r\n  ${GoogleColor};\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport { getProfileObj, setProfileObj } from \"./helpers/session.helper\";\r\nimport { ButtonDiv, GoogleLoginIcon, GoogleLoginButton } from \"./login.styles\";\r\n\r\nexport default class Login extends Component {\r\n  successResponseGoogle = response => {\r\n    if (response) {\r\n      setProfileObj(response.profileObj);\r\n      this.props.history.push(\"/home\");\r\n    }\r\n  };\r\n\r\n  failureResponseGoogle = response => {\r\n    console.log(response);\r\n  };\r\n\r\n  checkIfUserIsLoggedIn = () => {\r\n    let profileObj = getProfileObj();\r\n    if (profileObj) {\r\n      this.props.history.push(\"/home\");\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.checkIfUserIsLoggedIn();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <GoogleLogin\r\n        clientId=\"579327787651-59gvtsh6qe4ijk1lqerhhojt862ddd4r.apps.googleusercontent.com\"\r\n        onSuccess={this.successResponseGoogle}\r\n        onFailure={this.failureResponseGoogle}\r\n        cookiePolicy={\"single_host_origin\"}\r\n        render={renderProps => (\r\n          <ButtonDiv onClick={renderProps.onClick}>\r\n            <GoogleLoginButton>\r\n              <GoogleLoginIcon /> &nbsp; Login with Google\r\n            </GoogleLoginButton>\r\n          </ButtonDiv>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { lazy, Suspense } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport Spinner from \"./components/common/Spinner\";\nimport Login from \"./Login\";\n\nconst Home = lazy(() => import(\"./Home\"));\n\nfunction App() {\n  return (\n    <Suspense fallback={<Spinner />}>\n      <Switch>\n        <Redirect exact from=\"/\" to=\"/login\" />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/home\" component={Home} />\n      </Switch>\n    </Suspense>\n  );\n}\n\nexport default App;\n","import { FETCH_ALL_REQUESTS, FETCH_APPROVED_USERS, FETCH_FEEDBACK, FETCH_GROCERY } from \"../constants/types.constants\";\r\nimport { initialState } from \"./app.reducer\";\r\n\r\nconst adminReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_ALL_REQUESTS:\r\n      return {\r\n        ...state,\r\n        requests: action.data\r\n      };\r\n    case FETCH_APPROVED_USERS:\r\n      return {\r\n        ...state,\r\n        approvedUsers: action.data\r\n      };\r\n    case FETCH_FEEDBACK:\r\n      return {\r\n        ...state,\r\n        feedback: action.data\r\n      };\r\n    case FETCH_GROCERY:\r\n      return {\r\n        ...state,\r\n        grocery: action.data\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default adminReducer;\r\n","import {\r\n  DOWNLOAD_CLEANING_SCHEDULE,\r\n  FETCH_CLEANING_SCHEDULE_FOR_USER,\r\n  FETCH_FULL_CLEANING_SCHEDULE\r\n} from \"../constants/types.constants\";\r\nimport { initialState } from \"./app.reducer\";\r\n\r\nconst cleaningReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_CLEANING_SCHEDULE_FOR_USER:\r\n      return {\r\n        ...state,\r\n        userCleaningSchedule: action.data\r\n      };\r\n    case FETCH_FULL_CLEANING_SCHEDULE:\r\n      return {\r\n        ...state,\r\n        fullCleaningSchedule: action.data\r\n      };\r\n    case DOWNLOAD_CLEANING_SCHEDULE:\r\n      const byteCharacters = atob(action.data);\r\n      const byteNumbers = new Array(byteCharacters.length);\r\n      for (let i = 0; i < byteCharacters.length; i++) {\r\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n      }\r\n      const byteArray = new Uint8Array(byteNumbers);\r\n      const blob = new Blob([byteArray], {\r\n        type:\r\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\r\n      });\r\n      const blobUrl = URL.createObjectURL(blob);\r\n\r\n      let a = document.createElement(\"a\");\r\n      document.body.appendChild(a);\r\n      a.style = \"display: none\";\r\n      a.href = blobUrl;\r\n      a.download = \"New Schedule.xlsx\";\r\n      a.click();\r\n\r\n      URL.revokeObjectURL(blobUrl);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cleaningReducer;\r\n","import { initialState } from \"./app.reducer\";\r\nimport { FETCH_ALL_RECOS } from \"../constants/types.constants\";\r\n\r\nconst recommendationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_ALL_RECOS:\r\n      return {\r\n        ...state,\r\n        recommendationData: action.data\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default recommendationReducer;\r\n","import { FETCH_USER } from \"../constants/types.constants\";\r\nimport { initialState } from \"./app.reducer\";\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_USER:\r\n      let profileObj = action.data;\r\n      if (profileObj && profileObj.houses && profileObj.houses.length === 1) {\r\n        profileObj.house_id = profileObj.houses[0];\r\n      }\r\n      return {\r\n        ...state,\r\n        profileObj: action.data\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import { FETCH_VOTE_DATA } from \"../constants/types.constants\";\r\nimport { initialState } from \"./app.reducer\";\r\n\r\nconst voteReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_VOTE_DATA:\r\n      return {\r\n        ...state,\r\n        voteData: action.data\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default voteReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport { LOGOUT } from \"../constants/types.constants\";\r\nimport adminReducer from \"./admin.reducer\";\r\nimport cleaningReducer from \"./cleaning.reducer\";\r\nimport recommendationReducer from \"./recommendation.reducer\";\r\nimport userReducer from \"./user.reducer\";\r\nimport voteReducer from \"./vote.reducer\";\r\n\r\nexport const initialState = {\r\n  recommendationData: {},\r\n  voteDataByEmail: {},\r\n  grocery: [],\r\n};\r\n\r\nexport const appReducer = combineReducers({\r\n  cleaningReducer,\r\n  voteReducer,\r\n  recommendationReducer,\r\n  userReducer,\r\n  adminReducer,\r\n});\r\n\r\nexport const rootReducer = (state, action) => {\r\n  if (action.type === LOGOUT) {\r\n    state = initialState;\r\n  }\r\n  return appReducer(state, action);\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { logger } from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport { rootReducer } from \"./reducers/app.reducer\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nlet middlewares = [thunk];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}